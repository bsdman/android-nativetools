diff -ru -x config.guess -x config.sub original/bash-4.1/bashline.c archives/bash-4.1/bashline.c
--- original/bash-4.1/bashline.c	2009-10-25 03:10:19.000000000 +0900
+++ archives/bash-4.1/bashline.c	2013-08-11 22:29:37.121104176 +0900
@@ -2102,7 +2102,7 @@
      const char *text;
      int state;
 {
-#if defined (__WIN32__) || defined (__OPENNT) || !defined (HAVE_GRP_H)
+#if 1
   return ((char *)NULL);
 #else
   static char *gname = (char *)NULL;
diff -ru -x config.guess -x config.sub original/bash-4.1/doc/bashref.info archives/bash-4.1/doc/bashref.info
--- original/bash-4.1/doc/bashref.info	2009-12-30 05:59:33.000000000 +0900
+++ archives/bash-4.1/doc/bashref.info	2013-08-11 22:30:58.550880838 +0900
@@ -1,5 +1,5 @@
 This is bashref.info, produced by makeinfo version 4.13 from
-/Users/chet/src/bash/src/doc/bashref.texi.
+./bashref.texi.
 
 This text is a brief description of the features that are present in
 the Bash shell (version 4.1, 23 December 2009).
@@ -8729,8 +8729,8 @@
 
 File: bashref.info,  Node: Reporting Bugs,  Next: Major Differences From The Bourne Shell,  Prev: Installing Bash,  Up: Top
 
-Appendix A Reporting Bugs
-*************************
+付録 A Reporting Bugs
+***********************
 
 Please report all bugs you find in Bash.  But first, you should make
 sure that it really is a bug, and that it appears in the latest version
@@ -8764,8 +8764,8 @@
 
 File: bashref.info,  Node: Major Differences From The Bourne Shell,  Next: GNU Free Documentation License,  Prev: Reporting Bugs,  Up: Top
 
-Appendix B Major Differences From The Bourne Shell
-**************************************************
+付録 B Major Differences From The Bourne Shell
+************************************************
 
 Bash implements essentially the same grammar, parameter and variable
 expansion, redirection, and quoting as the Bourne Shell.  Bash uses the
@@ -9128,8 +9128,8 @@
 
 File: bashref.info,  Node: GNU Free Documentation License,  Next: Indexes,  Prev: Major Differences From The Bourne Shell,  Up: Top
 
-Appendix C GNU Free Documentation License
-*****************************************
+付録 C GNU Free Documentation License
+***************************************
 
                      Version 1.3, 3 November 2008
 
@@ -9614,8 +9614,8 @@
 
 File: bashref.info,  Node: Indexes,  Prev: GNU Free Documentation License,  Up: Top
 
-Appendix D Indexes
-******************
+付録 D Indexes
+****************
 
 * Menu:
 
@@ -9883,8 +9883,8 @@
 * LC_ALL:                                Bash Variables.      (line 363)
 * LC_COLLATE:                            Bash Variables.      (line 367)
 * LC_CTYPE:                              Bash Variables.      (line 374)
-* LC_MESSAGES <1>:                       Locale Translation.  (line  11)
-* LC_MESSAGES:                           Bash Variables.      (line 379)
+* LC_MESSAGES <1>:                       Bash Variables.      (line 379)
+* LC_MESSAGES:                           Locale Translation.  (line  11)
 * LC_NUMERIC:                            Bash Variables.      (line 383)
 * LINENO:                                Bash Variables.      (line 387)
 * LINES:                                 Bash Variables.      (line 391)
@@ -10217,132 +10217,132 @@
 
 
 Tag Table:
-Node: Top1346
-Node: Introduction3185
-Node: What is Bash?3413
-Node: What is a shell?4526
-Node: Definitions7066
-Node: Basic Shell Features9984
-Node: Shell Syntax11203
-Node: Shell Operation12233
-Node: Quoting13527
-Node: Escape Character14830
-Node: Single Quotes15315
-Node: Double Quotes15663
-Node: ANSI-C Quoting16788
-Node: Locale Translation17773
-Node: Comments18669
-Node: Shell Commands19287
-Node: Simple Commands20111
-Node: Pipelines20742
-Node: Lists22998
-Node: Compound Commands24727
-Node: Looping Constructs25531
-Node: Conditional Constructs27986
-Node: Command Grouping36099
-Node: Coprocesses37578
-Node: Shell Functions39222
-Node: Shell Parameters43776
-Node: Positional Parameters46192
-Node: Special Parameters47092
-Node: Shell Expansions50056
-Node: Brace Expansion51981
-Node: Tilde Expansion54736
-Node: Shell Parameter Expansion57087
-Node: Command Substitution65988
-Node: Arithmetic Expansion67321
-Node: Process Substitution68171
-Node: Word Splitting69221
-Node: Filename Expansion70844
-Node: Pattern Matching72983
-Node: Quote Removal76622
-Node: Redirections76917
-Node: Executing Commands85442
-Node: Simple Command Expansion86112
-Node: Command Search and Execution88042
-Node: Command Execution Environment90379
-Node: Environment93365
-Node: Exit Status95025
-Node: Signals96646
-Node: Shell Scripts98614
-Node: Shell Builtin Commands101132
-Node: Bourne Shell Builtins103160
-Node: Bash Builtins120536
-Node: Modifying Shell Behavior145364
-Node: The Set Builtin145709
-Node: The Shopt Builtin155233
-Node: Special Builtins166095
-Node: Shell Variables167074
-Node: Bourne Shell Variables167514
-Node: Bash Variables169495
-Node: Bash Features192981
-Node: Invoking Bash193864
-Node: Bash Startup Files199673
-Node: Interactive Shells204685
-Node: What is an Interactive Shell?205095
-Node: Is this Shell Interactive?205744
-Node: Interactive Shell Behavior206559
-Node: Bash Conditional Expressions209839
-Node: Shell Arithmetic213488
-Node: Aliases216234
-Node: Arrays218806
-Node: The Directory Stack222764
-Node: Directory Stack Builtins223478
-Node: Printing a Prompt226370
-Node: The Restricted Shell229122
-Node: Bash POSIX Mode230954
-Node: Job Control239011
-Node: Job Control Basics239471
-Node: Job Control Builtins244188
-Node: Job Control Variables248552
-Node: Command Line Editing249710
-Node: Introduction and Notation251277
-Node: Readline Interaction252899
-Node: Readline Bare Essentials254090
-Node: Readline Movement Commands255879
-Node: Readline Killing Commands256844
-Node: Readline Arguments258764
-Node: Searching259808
-Node: Readline Init File261994
-Node: Readline Init File Syntax263141
-Node: Conditional Init Constructs277628
-Node: Sample Init File280161
-Node: Bindable Readline Commands283278
-Node: Commands For Moving284485
-Node: Commands For History285629
-Node: Commands For Text288784
-Node: Commands For Killing291457
-Node: Numeric Arguments293908
-Node: Commands For Completion295047
-Node: Keyboard Macros299007
-Node: Miscellaneous Commands299578
-Node: Readline vi Mode305384
-Node: Programmable Completion306298
-Node: Programmable Completion Builtins313504
-Node: Using History Interactively322640
-Node: Bash History Facilities323324
-Node: Bash History Builtins326238
-Node: History Interaction330095
-Node: Event Designators332800
-Node: Word Designators333815
-Node: Modifiers335454
-Node: Installing Bash336858
-Node: Basic Installation337995
-Node: Compilers and Options340687
-Node: Compiling For Multiple Architectures341428
-Node: Installation Names343092
-Node: Specifying the System Type343910
-Node: Sharing Defaults344626
-Node: Operation Controls345299
-Node: Optional Features346257
-Node: Reporting Bugs355816
-Node: Major Differences From The Bourne Shell357017
-Node: GNU Free Documentation License373704
-Node: Indexes398900
-Node: Builtin Index399354
-Node: Reserved Word Index406181
-Node: Variable Index408629
-Node: Function Index420722
-Node: Concept Index427731
+Node: Top1319
+Node: Introduction3158
+Node: What is Bash?3386
+Node: What is a shell?4499
+Node: Definitions7039
+Node: Basic Shell Features9957
+Node: Shell Syntax11176
+Node: Shell Operation12206
+Node: Quoting13500
+Node: Escape Character14803
+Node: Single Quotes15288
+Node: Double Quotes15636
+Node: ANSI-C Quoting16761
+Node: Locale Translation17746
+Node: Comments18642
+Node: Shell Commands19260
+Node: Simple Commands20084
+Node: Pipelines20715
+Node: Lists22971
+Node: Compound Commands24700
+Node: Looping Constructs25504
+Node: Conditional Constructs27959
+Node: Command Grouping36072
+Node: Coprocesses37551
+Node: Shell Functions39195
+Node: Shell Parameters43749
+Node: Positional Parameters46165
+Node: Special Parameters47065
+Node: Shell Expansions50029
+Node: Brace Expansion51954
+Node: Tilde Expansion54709
+Node: Shell Parameter Expansion57060
+Node: Command Substitution65961
+Node: Arithmetic Expansion67294
+Node: Process Substitution68144
+Node: Word Splitting69194
+Node: Filename Expansion70817
+Node: Pattern Matching72956
+Node: Quote Removal76595
+Node: Redirections76890
+Node: Executing Commands85415
+Node: Simple Command Expansion86085
+Node: Command Search and Execution88015
+Node: Command Execution Environment90352
+Node: Environment93338
+Node: Exit Status94998
+Node: Signals96619
+Node: Shell Scripts98587
+Node: Shell Builtin Commands101105
+Node: Bourne Shell Builtins103133
+Node: Bash Builtins120509
+Node: Modifying Shell Behavior145337
+Node: The Set Builtin145682
+Node: The Shopt Builtin155206
+Node: Special Builtins166068
+Node: Shell Variables167047
+Node: Bourne Shell Variables167487
+Node: Bash Variables169468
+Node: Bash Features192954
+Node: Invoking Bash193837
+Node: Bash Startup Files199646
+Node: Interactive Shells204658
+Node: What is an Interactive Shell?205068
+Node: Is this Shell Interactive?205717
+Node: Interactive Shell Behavior206532
+Node: Bash Conditional Expressions209812
+Node: Shell Arithmetic213461
+Node: Aliases216207
+Node: Arrays218779
+Node: The Directory Stack222737
+Node: Directory Stack Builtins223451
+Node: Printing a Prompt226343
+Node: The Restricted Shell229095
+Node: Bash POSIX Mode230927
+Node: Job Control238984
+Node: Job Control Basics239444
+Node: Job Control Builtins244161
+Node: Job Control Variables248525
+Node: Command Line Editing249683
+Node: Introduction and Notation251250
+Node: Readline Interaction252872
+Node: Readline Bare Essentials254063
+Node: Readline Movement Commands255852
+Node: Readline Killing Commands256817
+Node: Readline Arguments258737
+Node: Searching259781
+Node: Readline Init File261967
+Node: Readline Init File Syntax263114
+Node: Conditional Init Constructs277601
+Node: Sample Init File280134
+Node: Bindable Readline Commands283251
+Node: Commands For Moving284458
+Node: Commands For History285602
+Node: Commands For Text288757
+Node: Commands For Killing291430
+Node: Numeric Arguments293881
+Node: Commands For Completion295020
+Node: Keyboard Macros298980
+Node: Miscellaneous Commands299551
+Node: Readline vi Mode305357
+Node: Programmable Completion306271
+Node: Programmable Completion Builtins313477
+Node: Using History Interactively322613
+Node: Bash History Facilities323297
+Node: Bash History Builtins326211
+Node: History Interaction330068
+Node: Event Designators332773
+Node: Word Designators333788
+Node: Modifiers335427
+Node: Installing Bash336831
+Node: Basic Installation337968
+Node: Compilers and Options340660
+Node: Compiling For Multiple Architectures341401
+Node: Installation Names343065
+Node: Specifying the System Type343883
+Node: Sharing Defaults344599
+Node: Operation Controls345272
+Node: Optional Features346230
+Node: Reporting Bugs355789
+Node: Major Differences From The Bourne Shell356986
+Node: GNU Free Documentation License373669
+Node: Indexes398861
+Node: Builtin Index399311
+Node: Reserved Word Index406138
+Node: Variable Index408586
+Node: Function Index420679
+Node: Concept Index427688
 
 End Tag Table
diff -ru -x config.guess -x config.sub original/bash-4.1/externs.h archives/bash-4.1/externs.h
--- original/bash-4.1/externs.h	2009-12-23 05:56:47.000000000 +0900
+++ archives/bash-4.1/externs.h	2013-08-11 22:20:49.827550779 +0900
@@ -179,7 +179,7 @@
 extern void print_clock_t ();
 
 /* Declarations for functions defined in lib/sh/fdprintf.c */
-extern void fdprintf __P((int, const char *, ...))  __attribute__((__format__ (printf, 2, 3)));
+// extern void fdprintf __P((int, const char *, ...))  __attribute__((__format__ (printf, 2, 3)));
 
 /* Declarations for functions defined in lib/sh/fmtulong.c */
 #define FL_PREFIX     0x01    /* add 0x, 0X, or 0 prefix as appropriate */
diff -ru -x config.guess -x config.sub original/bash-4.1/lib/readline/complete.c archives/bash-4.1/lib/readline/complete.c
--- original/bash-4.1/lib/readline/complete.c	2009-11-30 08:39:30.000000000 +0900
+++ archives/bash-4.1/lib/readline/complete.c	2013-08-11 22:30:09.620215897 +0900
@@ -1953,7 +1953,7 @@
      const char *text;
      int state;
 {
-#if defined (__WIN32__) || defined (__OPENNT)
+#if 1
   return (char *)NULL;
 #else /* !__WIN32__ && !__OPENNT) */
   static char *username = (char *)NULL;
diff -ru -x config.guess -x config.sub original/bash-4.1/lib/sh/oslib.c archives/bash-4.1/lib/sh/oslib.c
--- original/bash-4.1/lib/sh/oslib.c	2008-08-13 00:58:04.000000000 +0900
+++ archives/bash-4.1/lib/sh/oslib.c	2013-08-11 22:22:04.093505465 +0900
@@ -228,6 +228,7 @@
 }
 #endif /* !HAVE_KILLPG */
 
+#define HAVE_MKFIFO
 #if !defined (HAVE_MKFIFO) && defined (PROCESS_SUBSTITUTION)
 int
 mkfifo (path, mode)
diff -ru -x config.guess -x config.sub original/bash-4.1/parser-built archives/bash-4.1/parser-built
--- original/bash-4.1/parser-built	2009-12-31 02:52:02.000000000 +0900
+++ archives/bash-4.1/parser-built	2013-08-11 22:27:22.708778922 +0900
@@ -1,162 +0,0 @@
-/* A Bison parser, made by GNU Bison 2.3.  */
-
-/* Skeleton interface for Bison's Yacc-like parsers in C
-
-   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
-   Free Software Foundation, Inc.
-
-   This program is free software; you can redistribute it and/or modify
-   it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 2, or (at your option)
-   any later version.
-
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-   GNU General Public License for more details.
-
-   You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor,
-   Boston, MA 02110-1301, USA.  */
-
-/* As a special exception, you may create a larger work that contains
-   part or all of the Bison parser skeleton and distribute that work
-   under terms of your choice, so long as that work isn't itself a
-   parser generator using the skeleton or a modified version thereof
-   as a parser skeleton.  Alternatively, if you modify or redistribute
-   the parser skeleton itself, you may (at your option) remove this
-   special exception, which will cause the skeleton and the resulting
-   Bison output files to be licensed under the GNU General Public
-   License without this special exception.
-
-   This special exception was added by the Free Software Foundation in
-   version 2.2 of Bison.  */
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     IF = 258,
-     THEN = 259,
-     ELSE = 260,
-     ELIF = 261,
-     FI = 262,
-     CASE = 263,
-     ESAC = 264,
-     FOR = 265,
-     SELECT = 266,
-     WHILE = 267,
-     UNTIL = 268,
-     DO = 269,
-     DONE = 270,
-     FUNCTION = 271,
-     COPROC = 272,
-     COND_START = 273,
-     COND_END = 274,
-     COND_ERROR = 275,
-     IN = 276,
-     BANG = 277,
-     TIME = 278,
-     TIMEOPT = 279,
-     WORD = 280,
-     ASSIGNMENT_WORD = 281,
-     REDIR_WORD = 282,
-     NUMBER = 283,
-     ARITH_CMD = 284,
-     ARITH_FOR_EXPRS = 285,
-     COND_CMD = 286,
-     AND_AND = 287,
-     OR_OR = 288,
-     GREATER_GREATER = 289,
-     LESS_LESS = 290,
-     LESS_AND = 291,
-     LESS_LESS_LESS = 292,
-     GREATER_AND = 293,
-     SEMI_SEMI = 294,
-     SEMI_AND = 295,
-     SEMI_SEMI_AND = 296,
-     LESS_LESS_MINUS = 297,
-     AND_GREATER = 298,
-     AND_GREATER_GREATER = 299,
-     LESS_GREATER = 300,
-     GREATER_BAR = 301,
-     BAR_AND = 302,
-     yacc_EOF = 303
-   };
-#endif
-/* Tokens.  */
-#define IF 258
-#define THEN 259
-#define ELSE 260
-#define ELIF 261
-#define FI 262
-#define CASE 263
-#define ESAC 264
-#define FOR 265
-#define SELECT 266
-#define WHILE 267
-#define UNTIL 268
-#define DO 269
-#define DONE 270
-#define FUNCTION 271
-#define COPROC 272
-#define COND_START 273
-#define COND_END 274
-#define COND_ERROR 275
-#define IN 276
-#define BANG 277
-#define TIME 278
-#define TIMEOPT 279
-#define WORD 280
-#define ASSIGNMENT_WORD 281
-#define REDIR_WORD 282
-#define NUMBER 283
-#define ARITH_CMD 284
-#define ARITH_FOR_EXPRS 285
-#define COND_CMD 286
-#define AND_AND 287
-#define OR_OR 288
-#define GREATER_GREATER 289
-#define LESS_LESS 290
-#define LESS_AND 291
-#define LESS_LESS_LESS 292
-#define GREATER_AND 293
-#define SEMI_SEMI 294
-#define SEMI_AND 295
-#define SEMI_SEMI_AND 296
-#define LESS_LESS_MINUS 297
-#define AND_GREATER 298
-#define AND_GREATER_GREATER 299
-#define LESS_GREATER 300
-#define GREATER_BAR 301
-#define BAR_AND 302
-#define yacc_EOF 303
-
-
-
-
-#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE
-#line 320 "/Users/chet/src/bash/src/parse.y"
-{
-  WORD_DESC *word;		/* the word that we read. */
-  int number;			/* the number that we read. */
-  WORD_LIST *word_list;
-  COMMAND *command;
-  REDIRECT *redirect;
-  ELEMENT element;
-  PATTERN_LIST *pattern;
-}
-/* Line 1489 of yacc.c.  */
-#line 155 "y.tab.h"
-	YYSTYPE;
-# define yystype YYSTYPE /* obsolescent; will be withdrawn */
-# define YYSTYPE_IS_DECLARED 1
-# define YYSTYPE_IS_TRIVIAL 1
-#endif
-
-extern YYSTYPE yylval;
-
diff -ru -x config.guess -x config.sub original/bash-4.1/y.tab.c archives/bash-4.1/y.tab.c
--- original/bash-4.1/y.tab.c	2009-12-31 02:52:02.000000000 +0900
+++ archives/bash-4.1/y.tab.c	2013-08-11 22:27:22.704779031 +0900
@@ -1,24 +1,21 @@
-/* A Bison parser, made by GNU Bison 2.3.  */
+/* A Bison parser, made by GNU Bison 2.5.  */
 
-/* Skeleton implementation for Bison's Yacc-like parsers in C
-
-   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
-   Free Software Foundation, Inc.
-
-   This program is free software; you can redistribute it and/or modify
+/* Bison implementation for Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
+   
+   This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 2, or (at your option)
-   any later version.
-
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-
+   
    You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor,
-   Boston, MA 02110-1301, USA.  */
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -29,7 +26,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-
+   
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -47,7 +44,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.3"
+#define YYBISON_VERSION "2.5"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -55,118 +52,21 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Using locations.  */
-#define YYLSP_NEEDED 0
-
+/* Push parsers.  */
+#define YYPUSH 0
 
+/* Pull parsers.  */
+#define YYPULL 1
 
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     IF = 258,
-     THEN = 259,
-     ELSE = 260,
-     ELIF = 261,
-     FI = 262,
-     CASE = 263,
-     ESAC = 264,
-     FOR = 265,
-     SELECT = 266,
-     WHILE = 267,
-     UNTIL = 268,
-     DO = 269,
-     DONE = 270,
-     FUNCTION = 271,
-     COPROC = 272,
-     COND_START = 273,
-     COND_END = 274,
-     COND_ERROR = 275,
-     IN = 276,
-     BANG = 277,
-     TIME = 278,
-     TIMEOPT = 279,
-     WORD = 280,
-     ASSIGNMENT_WORD = 281,
-     REDIR_WORD = 282,
-     NUMBER = 283,
-     ARITH_CMD = 284,
-     ARITH_FOR_EXPRS = 285,
-     COND_CMD = 286,
-     AND_AND = 287,
-     OR_OR = 288,
-     GREATER_GREATER = 289,
-     LESS_LESS = 290,
-     LESS_AND = 291,
-     LESS_LESS_LESS = 292,
-     GREATER_AND = 293,
-     SEMI_SEMI = 294,
-     SEMI_AND = 295,
-     SEMI_SEMI_AND = 296,
-     LESS_LESS_MINUS = 297,
-     AND_GREATER = 298,
-     AND_GREATER_GREATER = 299,
-     LESS_GREATER = 300,
-     GREATER_BAR = 301,
-     BAR_AND = 302,
-     yacc_EOF = 303
-   };
-#endif
-/* Tokens.  */
-#define IF 258
-#define THEN 259
-#define ELSE 260
-#define ELIF 261
-#define FI 262
-#define CASE 263
-#define ESAC 264
-#define FOR 265
-#define SELECT 266
-#define WHILE 267
-#define UNTIL 268
-#define DO 269
-#define DONE 270
-#define FUNCTION 271
-#define COPROC 272
-#define COND_START 273
-#define COND_END 274
-#define COND_ERROR 275
-#define IN 276
-#define BANG 277
-#define TIME 278
-#define TIMEOPT 279
-#define WORD 280
-#define ASSIGNMENT_WORD 281
-#define REDIR_WORD 282
-#define NUMBER 283
-#define ARITH_CMD 284
-#define ARITH_FOR_EXPRS 285
-#define COND_CMD 286
-#define AND_AND 287
-#define OR_OR 288
-#define GREATER_GREATER 289
-#define LESS_LESS 290
-#define LESS_AND 291
-#define LESS_LESS_LESS 292
-#define GREATER_AND 293
-#define SEMI_SEMI 294
-#define SEMI_AND 295
-#define SEMI_SEMI_AND 296
-#define LESS_LESS_MINUS 297
-#define AND_GREATER 298
-#define AND_GREATER_GREATER 299
-#define LESS_GREATER 300
-#define GREATER_BAR 301
-#define BAR_AND 302
-#define yacc_EOF 303
-
+/* Using locations.  */
+#define YYLSP_NEEDED 0
 
 
 
 /* Copy the first part of user declarations.  */
-#line 21 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 268 of yacc.c  */
+#line 21 "./parse.y"
 
 #include "config.h"
 
@@ -466,6 +366,9 @@
 static REDIRECTEE redir;
 
 
+/* Line 268 of yacc.c  */
+#line 371 "y.tab.c"
+
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -484,10 +387,119 @@
 # define YYTOKEN_TABLE 0
 #endif
 
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     IF = 258,
+     THEN = 259,
+     ELSE = 260,
+     ELIF = 261,
+     FI = 262,
+     CASE = 263,
+     ESAC = 264,
+     FOR = 265,
+     SELECT = 266,
+     WHILE = 267,
+     UNTIL = 268,
+     DO = 269,
+     DONE = 270,
+     FUNCTION = 271,
+     COPROC = 272,
+     COND_START = 273,
+     COND_END = 274,
+     COND_ERROR = 275,
+     IN = 276,
+     BANG = 277,
+     TIME = 278,
+     TIMEOPT = 279,
+     WORD = 280,
+     ASSIGNMENT_WORD = 281,
+     REDIR_WORD = 282,
+     NUMBER = 283,
+     ARITH_CMD = 284,
+     ARITH_FOR_EXPRS = 285,
+     COND_CMD = 286,
+     AND_AND = 287,
+     OR_OR = 288,
+     GREATER_GREATER = 289,
+     LESS_LESS = 290,
+     LESS_AND = 291,
+     LESS_LESS_LESS = 292,
+     GREATER_AND = 293,
+     SEMI_SEMI = 294,
+     SEMI_AND = 295,
+     SEMI_SEMI_AND = 296,
+     LESS_LESS_MINUS = 297,
+     AND_GREATER = 298,
+     AND_GREATER_GREATER = 299,
+     LESS_GREATER = 300,
+     GREATER_BAR = 301,
+     BAR_AND = 302,
+     yacc_EOF = 303
+   };
+#endif
+/* Tokens.  */
+#define IF 258
+#define THEN 259
+#define ELSE 260
+#define ELIF 261
+#define FI 262
+#define CASE 263
+#define ESAC 264
+#define FOR 265
+#define SELECT 266
+#define WHILE 267
+#define UNTIL 268
+#define DO 269
+#define DONE 270
+#define FUNCTION 271
+#define COPROC 272
+#define COND_START 273
+#define COND_END 274
+#define COND_ERROR 275
+#define IN 276
+#define BANG 277
+#define TIME 278
+#define TIMEOPT 279
+#define WORD 280
+#define ASSIGNMENT_WORD 281
+#define REDIR_WORD 282
+#define NUMBER 283
+#define ARITH_CMD 284
+#define ARITH_FOR_EXPRS 285
+#define COND_CMD 286
+#define AND_AND 287
+#define OR_OR 288
+#define GREATER_GREATER 289
+#define LESS_LESS 290
+#define LESS_AND 291
+#define LESS_LESS_LESS 292
+#define GREATER_AND 293
+#define SEMI_SEMI 294
+#define SEMI_AND 295
+#define SEMI_SEMI_AND 296
+#define LESS_LESS_MINUS 297
+#define AND_GREATER 298
+#define AND_GREATER_GREATER 299
+#define LESS_GREATER 300
+#define GREATER_BAR 301
+#define BAR_AND 302
+#define yacc_EOF 303
+
+
+
+
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-#line 320 "/Users/chet/src/bash/src/parse.y"
 {
+
+/* Line 293 of yacc.c  */
+#line 320 "./parse.y"
+
   WORD_DESC *word;		/* the word that we read. */
   int number;			/* the number that we read. */
   WORD_LIST *word_list;
@@ -495,22 +507,23 @@
   REDIRECT *redirect;
   ELEMENT element;
   PATTERN_LIST *pattern;
-}
-/* Line 187 of yacc.c.  */
-#line 501 "y.tab.c"
-	YYSTYPE;
+
+
+
+/* Line 293 of yacc.c  */
+#line 515 "y.tab.c"
+} YYSTYPE;
+# define YYSTYPE_IS_TRIVIAL 1
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
-# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
-
 /* Copy the second part of user declarations.  */
 
 
-/* Line 216 of yacc.c.  */
-#line 514 "y.tab.c"
+/* Line 343 of yacc.c  */
+#line 527 "y.tab.c"
 
 #ifdef short
 # undef short
@@ -560,7 +573,7 @@
 #define YYSIZE_MAXIMUM ((YYSIZE_T) -1)
 
 #ifndef YY_
-# if YYENABLE_NLS
+# if defined YYENABLE_NLS && YYENABLE_NLS
 #  if ENABLE_NLS
 #   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
 #   define YY_(msgid) dgettext ("bison-runtime", msgid)
@@ -585,14 +598,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int i)
+YYID (int yyi)
 #else
 static int
-YYID (i)
-    int i;
+YYID (yyi)
+    int yyi;
 #endif
 {
-  return i;
+  return yyi;
 }
 #endif
 
@@ -613,11 +626,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef _STDLIB_H
-#      define _STDLIB_H 1
+#     ifndef EXIT_SUCCESS
+#      define EXIT_SUCCESS 0
 #     endif
 #    endif
 #   endif
@@ -640,24 +653,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined _STDLIB_H \
+#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef _STDLIB_H
-#    define _STDLIB_H 1
+#   ifndef EXIT_SUCCESS
+#    define EXIT_SUCCESS 0
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -673,9 +686,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss;
-  YYSTYPE yyvs;
-  };
+  yytype_int16 yyss_alloc;
+  YYSTYPE yyvs_alloc;
+};
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -686,6 +699,27 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
+# define YYCOPY_NEEDED 1
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
+	Stack = &yyptr->Stack_alloc;					\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
+
+#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -703,29 +737,12 @@
       while (YYID (0))
 #  endif
 # endif
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack)					\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack, Stack, yysize);				\
-	Stack = &yyptr->Stack;						\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
+#endif /* !YYCOPY_NEEDED */
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  113
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   760
+#define YYLAST   732
 
 /* YYNTOKENS -- Number of terminals.  */
 #define YYNTOKENS  60
@@ -734,7 +751,7 @@
 /* YYNRULES -- Number of rules.  */
 #define YYNRULES  167
 /* YYNRULES -- Number of states.  */
-#define YYNSTATES  344
+#define YYNSTATES  336
 
 /* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
 #define YYUNDEFTOK  2
@@ -985,8 +1002,8 @@
        3,     3,     2,     4,     4,     1,     1,     2
 };
 
-/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
-   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
+   Performed when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -1012,28 +1029,27 @@
        0,     0,   160,     0,   147,   147,   147,   147,   147,   147,
        0,   147,     0,   147,     0,     0,     0,     0,   147,     0,
      147,     0,     0,   147,    99,    98,   105,     0,   152,   153,
-       0,     0,   164,   163,   147,   147,   107,     0,     0,     0,
-     134,   135,   133,     0,   116,   147,     0,   147,   147,     0,
-       6,     0,   147,     0,    85,    86,   147,   147,   147,   147,
-       0,     0,     0,     0,    66,    67,     0,   100,    96,     0,
-       0,   109,   136,   137,   138,   139,   140,    95,   122,   124,
-     126,   117,     0,    93,   128,     0,     0,     0,     0,    75,
-       7,   147,     0,    76,     0,     0,     0,     0,    87,     0,
-     147,    88,    97,   108,   147,   147,   147,   147,   123,   125,
-     127,    94,     0,     0,   147,    77,    78,     0,   147,   147,
-      83,    84,    89,    90,     0,   113,     0,     0,     0,   147,
-     129,   118,   119,   147,   147,     0,     0,   147,   147,   147,
-     115,   120,   121,     0,     0,    81,    82,     0,     0,   114,
-      79,    80,    91,    92
+     164,   163,   147,   147,   107,     0,     0,     0,   134,   135,
+     133,     0,   116,   147,     0,   147,   147,     0,     6,     0,
+     147,     0,    85,    86,   147,   147,   147,   147,     0,     0,
+       0,     0,    66,    67,     0,   100,    96,     0,     0,   109,
+     136,   137,   138,   139,   140,    95,   122,   124,   126,   117,
+       0,    93,   128,     0,     0,     0,     0,    75,     7,   147,
+       0,    76,     0,     0,     0,     0,    87,     0,   147,    88,
+      97,   108,   147,   123,   125,   127,    94,     0,     0,   147,
+      77,    78,     0,   147,   147,    83,    84,    89,    90,     0,
+     113,   147,   129,   118,   119,   147,   147,     0,     0,   147,
+     147,   147,   115,   120,   121,     0,     0,    81,    82,     0,
+       0,   114,    79,    80,    91,    92
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
-      -1,    34,   241,    35,    36,   117,    37,    38,    39,    40,
+      -1,    34,   239,    35,    36,   117,    37,    38,    39,    40,
       41,    42,    43,    44,   215,    45,    46,    47,    48,    49,
-      50,   227,   233,   234,   235,   276,    57,    58,   135,   136,
-     120,   131,    59,    51,   188,   137,    54,    55
+      50,   225,   231,   232,   233,   274,    57,    58,   135,   136,
+     120,   131,    59,    51,    52,   137,    54,    55
 };
 
 /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
@@ -1041,217 +1057,215 @@
 #define YYPACT_NINF -212
 static const yytype_int16 yypact[] =
 {
-     318,   -40,  -212,    11,    10,    32,  -212,  -212,    34,   661,
-      39,   514,    52,    21,  -212,   255,   706,  -212,    65,    79,
-      47,    98,    55,   133,   134,   139,   151,   152,  -212,  -212,
-     156,   157,  -212,  -212,   142,  -212,  -212,   232,  -212,   693,
-    -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,
-    -212,    49,   213,  -212,   -28,   367,  -212,  -212,   150,   416,
-    -212,   135,    -3,   137,   184,   194,   158,    31,   232,   693,
-     191,   -28,   612,  -212,   166,   199,   202,    69,   209,   128,
-     210,   214,   218,   219,   225,   227,   247,   165,   248,   181,
-     256,   257,   258,   259,   262,  -212,  -212,  -212,  -212,  -212,
+     310,   -25,  -212,    -3,    41,     6,  -212,  -212,    17,   653,
+      15,   506,    69,    40,  -212,   254,   678,  -212,    75,    88,
+       7,   106,    84,   119,   127,   131,   134,   138,  -212,  -212,
+     150,   154,  -212,  -212,   183,  -212,  -212,   199,  -212,   222,
     -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,
-    -212,   237,   236,  -212,  -212,  -212,  -212,   693,  -212,  -212,
-    -212,  -212,  -212,   465,   465,  -212,  -212,   612,  -212,  -212,
-    -212,  -212,   -28,  -212,  -212,  -212,   205,  -212,   -13,  -212,
-     116,  -212,  -212,  -212,  -212,   117,  -212,  -212,   240,    53,
-     693,   693,  -212,   -28,  -212,  -212,  -212,  -212,  -212,  -212,
+    -212,    60,    85,  -212,   -28,   359,  -212,  -212,   185,   408,
+    -212,   141,    36,   145,   182,   188,   151,    46,   199,   222,
+     189,   -28,   604,  -212,   155,   190,   198,   129,   203,   148,
+     207,   221,   223,   229,   230,   236,   237,   149,   245,   163,
+     248,   249,   252,   262,   269,  -212,  -212,  -212,  -212,  -212,
     -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,
+    -212,   212,   243,  -212,  -212,  -212,  -212,   222,  -212,  -212,
+    -212,  -212,  -212,   457,   457,  -212,  -212,   604,  -212,  -212,
+    -212,  -212,   -28,  -212,  -212,  -212,   292,  -212,    19,  -212,
+      49,  -212,  -212,  -212,  -212,    51,  -212,  -212,   247,    26,
+     222,   222,  -212,   -28,  -212,  -212,  -212,  -212,  -212,  -212,
     -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,
-    -212,  -212,  -212,  -212,  -212,  -212,   416,   416,    75,    75,
-     563,   563,   -28,    15,  -212,  -212,  -212,  -212,  -212,  -212,
-      72,  -212,   120,  -212,   281,   249,   105,   118,  -212,   279,
-    -212,   290,   292,  -212,   693,  -212,   693,    53,  -212,  -212,
-     465,   465,   -28,   -28,  -212,  -212,  -212,   303,   416,   416,
-     416,   416,   416,   302,   174,  -212,     0,  -212,  -212,   297,
-    -212,   179,  -212,   263,  -212,  -212,  -212,  -212,  -212,  -212,
-     299,   416,   179,   265,  -212,  -212,    53,   693,  -212,   308,
-     312,  -212,  -212,  -212,    80,    80,    80,  -212,  -212,  -212,
-    -212,   224,    43,  -212,  -212,   300,    33,   309,   270,  -212,
-    -212,  -212,   129,  -212,   317,   276,   322,   282,  -212,   205,
     -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,  -212,
-    -212,  -212,    46,   313,  -212,  -212,  -212,   149,  -212,  -212,
-    -212,  -212,  -212,  -212,   161,   115,   416,   416,   416,  -212,
-    -212,  -212,   416,  -212,  -212,   327,   291,  -212,  -212,  -212,
-    -212,  -212,   416,   334,   293,  -212,  -212,   336,   301,  -212,
-    -212,  -212,  -212,  -212
+    -212,  -212,  -212,  -212,  -212,  -212,   408,   408,    92,    92,
+     555,   555,   -28,   206,  -212,  -212,  -212,  -212,  -212,  -212,
+      38,  -212,   118,  -212,   280,   246,    47,    76,  -212,   279,
+    -212,   297,   299,  -212,   222,  -212,   222,    26,  -212,  -212,
+     -28,   -28,  -212,  -212,  -212,   309,   408,   408,   408,   408,
+     408,   308,   181,  -212,    -5,  -212,  -212,   304,  -212,   156,
+    -212,   272,  -212,  -212,  -212,  -212,  -212,  -212,   315,   408,
+     156,   274,  -212,  -212,    26,   222,  -212,   327,   339,  -212,
+    -212,  -212,    96,    96,    96,  -212,  -212,  -212,  -212,   244,
+      58,  -212,  -212,   324,   -31,   335,   294,  -212,  -212,  -212,
+     105,  -212,   342,   301,   344,   316,  -212,   292,  -212,  -212,
+    -212,  -212,  -212,  -212,  -212,  -212,  -212,   -29,   340,  -212,
+    -212,  -212,   108,  -212,  -212,  -212,  -212,  -212,  -212,   116,
+     165,  -212,  -212,  -212,   408,  -212,  -212,   363,   317,  -212,
+    -212,  -212,  -212,  -212,   408,   364,   323,  -212,  -212,   367,
+     326,  -212,  -212,  -212,  -212,  -212
 };
 
 /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
-    -212,  -212,   148,   -36,     1,   -62,   350,  -212,    -5,  -212,
+    -212,  -212,   180,   -36,   -27,   -61,   381,  -212,    -7,  -212,
     -212,  -212,  -212,  -212,  -211,  -212,  -212,  -212,  -212,  -212,
-    -212,    50,  -212,   131,  -212,    92,  -194,    -6,  -212,  -200,
-    -212,   -45,   -48,  -212,     5,     2,    12,   362
+    -212,    81,  -212,   159,  -212,   125,  -199,    -6,  -212,    52,
+    -212,   -57,   -48,  -212,  -107,    14,    -4,   388
 };
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If zero, do what YYDEFACT says.
-   If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint16 yytable[] =
 {
-      64,    65,    53,   116,    69,    52,   258,   151,   199,   273,
-      56,   141,   138,   140,   250,   145,   253,   143,   149,   125,
-     224,   225,   226,    71,   126,   274,   111,   112,   262,   263,
-     264,   265,   266,   116,     2,    61,    60,   134,   115,     3,
-      62,     4,     5,     6,     7,   292,   128,   129,   130,    10,
-     134,   289,   301,   142,   286,   287,     2,    63,   275,    66,
-      17,     3,   150,     4,     5,     6,     7,   132,   274,   115,
-      70,    10,    97,   186,   187,    98,    73,   190,   191,    74,
-     101,   185,    17,   102,   153,   303,   237,    32,   216,    33,
-      95,   200,   304,   134,   157,   206,   207,   158,   303,   118,
-     119,   275,    99,   134,    96,   319,   217,   121,   122,    32,
-     103,    33,   194,   195,   116,   185,   264,   265,   266,   246,
-     329,   225,   134,   100,   159,    53,    53,   193,   238,   189,
-     201,   208,   248,   337,   338,   204,   205,   202,   209,   192,
-     211,   212,   113,   308,   214,   240,   228,   229,   230,   231,
-     232,   236,   257,   161,   133,   134,   162,   242,   104,   105,
-     251,   247,   251,   323,   106,   256,   134,   134,   134,   128,
-     129,   130,   203,   210,   249,   327,   107,   108,   116,   134,
-     185,   109,   110,   163,   139,   309,   144,   272,    53,    53,
-     171,   218,   219,   172,   282,   239,   281,   243,   146,   134,
-     251,   251,   222,   223,   280,   324,   175,   290,   147,   176,
-     152,   134,   214,   268,   269,   270,   148,   328,   259,   260,
-     173,   185,    53,    53,   155,   154,   189,   156,   128,   129,
-     130,   277,   278,   307,   160,   164,   177,   194,   195,   165,
-     284,   285,   314,   166,   167,   121,   122,   316,   317,   318,
-     168,   214,   169,   196,   197,   198,   322,   114,    14,    15,
-      16,   123,   124,   298,   299,   300,    18,    19,    20,    21,
-      22,   332,   170,   174,    23,    24,    25,    26,    27,   251,
-     251,   178,   179,   180,   181,    30,    31,   182,   315,    75,
-      76,    77,    78,    79,   183,   184,   244,    80,   321,   213,
-      81,    82,   325,   326,   240,   254,   245,   255,    83,    84,
-     261,   267,   279,   331,   288,   293,   294,   333,   334,     1,
-     283,     2,   291,   339,   305,   274,     3,   306,     4,     5,
-       6,     7,   310,   311,     8,     9,    10,   312,   320,   313,
-      11,    12,   335,    13,    14,    15,    16,    17,   336,   340,
-     341,   342,    18,    19,    20,    21,    22,   252,   343,    68,
-      23,    24,    25,    26,    27,   330,   271,   302,    28,    29,
-       2,    30,    31,    72,    32,     3,    33,     4,     5,     6,
-       7,     0,     0,     8,     9,    10,     0,     0,     0,   127,
-       0,     0,    13,    14,    15,    16,    17,     0,     0,     0,
+      64,    65,    69,   116,   271,   143,   256,    71,   151,   248,
+     115,   251,   138,   140,    53,   145,   188,   189,   149,   125,
+     272,   298,    60,   298,   126,    56,   111,   112,   299,     2,
+     311,    63,    97,   116,     3,    98,     4,     5,     6,     7,
+     199,   115,    66,   290,    10,   134,    70,   284,   285,     2,
+     141,   132,   235,   273,     3,    17,     4,     5,     6,     7,
+     150,   244,    99,   201,    10,   208,    61,   296,   153,   134,
+     202,    62,   209,   186,   187,    17,   134,   190,   191,   218,
+     219,   185,    32,   272,    33,   128,   129,   130,   134,   216,
+     246,   200,   142,    73,   236,   206,   207,   134,    74,   134,
+      95,   134,    32,   245,    33,   203,   217,   210,   134,   101,
+     118,   119,   102,    96,   116,   185,   273,   121,   122,   303,
+     329,   330,   315,   192,   121,   122,   134,   193,   194,   195,
+     319,   100,   247,   123,   124,   204,   205,    53,    53,   103,
+     211,   212,   214,   238,   104,   240,   226,   227,   228,   229,
+     230,   234,   105,   255,   157,   134,   106,   158,   134,   107,
+     249,   304,   249,   108,   316,   254,   134,   128,   129,   130,
+     321,   223,   320,   161,   171,   109,   162,   172,   116,   110,
+     185,   278,   279,   113,   159,   270,   220,   221,   175,   133,
+     139,   176,   280,   288,   144,   237,   146,   241,   249,   249,
+      53,    53,   147,   163,   173,   128,   129,   130,   152,   148,
+     214,   222,   223,   224,   154,   155,   257,   258,   177,   185,
+     266,   267,   268,   156,   114,    14,    15,    16,   160,   275,
+     276,   302,   164,    18,    19,    20,    21,    22,   282,   283,
+     309,    23,    24,    25,    26,    27,   165,   214,   166,    15,
+      16,   314,    30,    31,   167,   168,    18,    19,    20,    21,
+      22,   169,   170,   324,    23,    24,    25,    26,    27,   183,
+     174,   249,   249,   178,   179,    30,    31,   180,   260,   261,
+     262,   263,   264,   293,   294,   295,   310,   181,    75,    76,
+      77,    78,    79,   313,   182,   242,    80,   317,   318,    81,
+      82,   287,   184,   243,   238,   323,   213,    83,    84,   325,
+     326,     1,   252,     2,   253,   331,   259,   265,     3,   277,
+       4,     5,     6,     7,   194,   195,     8,     9,    10,   281,
+     286,   289,    11,    12,   291,    13,    14,    15,    16,    17,
+     196,   197,   198,   292,    18,    19,    20,    21,    22,   272,
+     300,   301,    23,    24,    25,    26,    27,   305,   306,   307,
+      28,    29,     2,    30,    31,   312,    32,     3,    33,     4,
+       5,     6,     7,   308,   328,     8,     9,    10,   327,   332,
+     333,   127,   334,   335,    13,    14,    15,    16,    17,   250,
+      68,   322,   269,    18,    19,    20,    21,    22,   297,    72,
+       0,    23,    24,    25,    26,    27,     0,     0,   128,   129,
+     130,     2,    30,    31,     0,    32,     3,    33,     4,     5,
+       6,     7,     0,     0,     8,     9,    10,     0,     0,     0,
+      11,    12,     0,    13,    14,    15,    16,    17,     0,     0,
+       0,     0,    18,    19,    20,    21,    22,     0,     0,     0,
+      23,    24,    25,    26,    27,     0,     0,     0,   134,     0,
+       2,    30,    31,     0,    32,     3,    33,     4,     5,     6,
+       7,     0,     0,     8,     9,    10,     0,     0,     0,    11,
+      12,     0,    13,    14,    15,    16,    17,     0,     0,     0,
        0,    18,    19,    20,    21,    22,     0,     0,     0,    23,
-      24,    25,    26,    27,     0,     0,   128,   129,   130,     2,
+      24,    25,    26,    27,     0,     0,     0,     0,     0,     2,
       30,    31,     0,    32,     3,    33,     4,     5,     6,     7,
-       0,     0,     8,     9,    10,     0,     0,     0,    11,    12,
+       0,     0,     8,     9,    10,     0,     0,     0,     0,    12,
        0,    13,    14,    15,    16,    17,     0,     0,     0,     0,
       18,    19,    20,    21,    22,     0,     0,     0,    23,    24,
-      25,    26,    27,     0,     0,     0,   134,     0,     2,    30,
+      25,    26,    27,     0,     0,     0,     0,     0,     2,    30,
       31,     0,    32,     3,    33,     4,     5,     6,     7,     0,
-       0,     8,     9,    10,     0,     0,     0,    11,    12,     0,
+       0,     8,     9,    10,     0,     0,     0,     0,     0,     0,
       13,    14,    15,    16,    17,     0,     0,     0,     0,    18,
       19,    20,    21,    22,     0,     0,     0,    23,    24,    25,
-      26,    27,     0,     0,     0,     0,     0,     2,    30,    31,
+      26,    27,     0,     0,     0,   134,     0,     2,    30,    31,
        0,    32,     3,    33,     4,     5,     6,     7,     0,     0,
-       8,     9,    10,     0,     0,     0,     0,    12,     0,    13,
+       8,     9,    10,     0,     0,     0,     0,     0,     0,    13,
       14,    15,    16,    17,     0,     0,     0,     0,    18,    19,
       20,    21,    22,     0,     0,     0,    23,    24,    25,    26,
       27,     0,     0,     0,     0,     0,     2,    30,    31,     0,
-      32,     3,    33,     4,     5,     6,     7,     0,     0,     8,
-       9,    10,     0,     0,     0,     0,     0,     0,    13,    14,
+      32,     3,    33,     4,     5,     6,     7,     0,     0,     0,
+       0,    10,     0,     0,     0,     0,     0,     0,    67,    14,
       15,    16,    17,     0,     0,     0,     0,    18,    19,    20,
       21,    22,     0,     0,     0,    23,    24,    25,    26,    27,
-       0,     0,     0,   134,     0,     2,    30,    31,     0,    32,
-       3,    33,     4,     5,     6,     7,     0,     0,     8,     9,
-      10,     0,     0,     0,     0,     0,     0,    13,    14,    15,
-      16,    17,     0,     0,     0,     0,    18,    19,    20,    21,
-      22,     0,     0,     0,    23,    24,    25,    26,    27,     0,
-       0,     0,     0,     0,     2,    30,    31,     0,    32,     3,
-      33,     4,     5,     6,     7,     0,     0,     0,     0,    10,
-       0,     0,     0,     0,     0,     0,    67,    14,    15,    16,
-      17,     0,     0,     0,     0,    18,    19,    20,    21,    22,
-       0,     0,     0,    23,    24,    25,    26,    27,     0,     0,
-       0,     0,     0,     0,    30,    31,     0,    32,     0,    33,
-      15,    16,     0,     0,     0,     0,     0,    18,    19,    20,
-      21,    22,     0,     0,     0,    23,    24,    25,    26,    27,
-      85,    86,    87,    88,    89,     0,    30,    31,    90,     0,
-       0,    91,    92,     0,     0,     0,     0,     0,     0,    93,
-      94
+       0,     0,     0,     0,     0,     0,    30,    31,     0,    32,
+       0,    33,    85,    86,    87,    88,    89,     0,     0,     0,
+      90,     0,     0,    91,    92,     0,     0,     0,     0,     0,
+       0,    93,    94
 };
 
+#define yypact_value_is_default(yystate) \
+  ((yystate) == (-212))
+
+#define yytable_value_is_error(yytable_value) \
+  YYID (0)
+
 static const yytype_int16 yycheck[] =
 {
-       6,     7,     0,    39,     9,     0,   217,    69,    21,     9,
-      50,    14,    60,    61,   208,    63,   210,    62,    66,    47,
-       5,     6,     7,    11,    52,    25,    32,    33,   228,   229,
-     230,   231,   232,    69,     3,    25,    25,    50,    37,     8,
-      30,    10,    11,    12,    13,   256,    49,    50,    51,    18,
-      50,   251,     9,    56,   248,   249,     3,    25,    58,    25,
-      29,     8,    67,    10,    11,    12,    13,    55,    25,    68,
-      31,    18,    25,   121,   122,    28,    24,   125,   126,    58,
-      25,   117,    29,    28,    72,    52,    14,    56,   150,    58,
-      25,   139,    59,    50,    25,   143,   144,    28,    52,    50,
-      51,    58,    55,    50,    25,    59,   154,    32,    33,    56,
-      55,    58,    32,    33,   150,   151,   316,   317,   318,    14,
-       5,     6,    50,    25,    55,   123,   124,   133,    56,   124,
-      14,    14,    14,   327,   328,   141,   142,    21,    21,   127,
-     146,   147,     0,    14,   149,    25,   194,   195,   196,   197,
-     198,   199,   214,    25,     4,    50,    28,   202,    25,    25,
-     208,    56,   210,    14,    25,   213,    50,    50,    50,    49,
-      50,    51,    56,    56,    56,    14,    25,    25,   214,    50,
-     216,    25,    25,    55,    49,    56,    49,   235,   186,   187,
-      25,   186,   187,    28,   242,   201,   241,   203,    14,    50,
-     248,   249,   190,   191,    25,    56,    25,   252,    14,    28,
-      19,    50,   217,    39,    40,    41,    58,    56,   224,   225,
-      55,   257,   220,   221,    25,    59,   221,    25,    49,    50,
-      51,   237,   238,   281,    25,    25,    55,    32,    33,    25,
-     246,   247,   290,    25,    25,    32,    33,   295,   296,   297,
-      25,   256,    25,    48,    49,    50,   304,    25,    26,    27,
-      28,    48,    49,    39,    40,    41,    34,    35,    36,    37,
-      38,   319,    25,    25,    42,    43,    44,    45,    46,   327,
-     328,    25,    25,    25,    25,    53,    54,    25,   294,    34,
-      35,    36,    37,    38,    57,    59,    15,    42,   304,    59,
-      45,    46,   308,   309,    25,    15,    57,    15,    53,    54,
-       7,     9,    15,   319,    15,     7,     4,   323,   324,     1,
-      57,     3,    57,   329,    15,    25,     8,    57,    10,    11,
-      12,    13,    15,    57,    16,    17,    18,    15,    25,    57,
-      22,    23,    15,    25,    26,    27,    28,    29,    57,    15,
-      57,    15,    34,    35,    36,    37,    38,   209,    57,     9,
-      42,    43,    44,    45,    46,   315,   235,   275,    50,    51,
-       3,    53,    54,    11,    56,     8,    58,    10,    11,    12,
+       6,     7,     9,    39,     9,    62,   217,    11,    69,   208,
+      37,   210,    60,    61,     0,    63,   123,   124,    66,    47,
+      25,    52,    25,    52,    52,    50,    32,    33,    59,     3,
+      59,    25,    25,    69,     8,    28,    10,    11,    12,    13,
+      21,    68,    25,   254,    18,    50,    31,   246,   247,     3,
+      14,    55,    14,    58,     8,    29,    10,    11,    12,    13,
+      67,    14,    55,    14,    18,    14,    25,     9,    72,    50,
+      21,    30,    21,   121,   122,    29,    50,   125,   126,   186,
+     187,   117,    56,    25,    58,    49,    50,    51,    50,   150,
+      14,   139,    56,    24,    56,   143,   144,    50,    58,    50,
+      25,    50,    56,    56,    58,    56,   154,    56,    50,    25,
+      50,    51,    28,    25,   150,   151,    58,    32,    33,    14,
+     319,   320,    14,   127,    32,    33,    50,   133,    32,    33,
+      14,    25,    56,    48,    49,   141,   142,   123,   124,    55,
+     146,   147,   149,    25,    25,   202,   194,   195,   196,   197,
+     198,   199,    25,   214,    25,    50,    25,    28,    50,    25,
+     208,    56,   210,    25,    56,   213,    50,    49,    50,    51,
+       5,     6,    56,    25,    25,    25,    28,    28,   214,    25,
+     216,    25,   239,     0,    55,   233,   190,   191,    25,     4,
+      49,    28,   240,   250,    49,   201,    14,   203,   246,   247,
+     186,   187,    14,    55,    55,    49,    50,    51,    19,    58,
+     217,     5,     6,     7,    59,    25,   222,   223,    55,   255,
+      39,    40,    41,    25,    25,    26,    27,    28,    25,   235,
+     236,   279,    25,    34,    35,    36,    37,    38,   244,   245,
+     288,    42,    43,    44,    45,    46,    25,   254,    25,    27,
+      28,   299,    53,    54,    25,    25,    34,    35,    36,    37,
+      38,    25,    25,   311,    42,    43,    44,    45,    46,    57,
+      25,   319,   320,    25,    25,    53,    54,    25,   226,   227,
+     228,   229,   230,    39,    40,    41,   292,    25,    34,    35,
+      36,    37,    38,   299,    25,    15,    42,   303,   304,    45,
+      46,   249,    59,    57,    25,   311,    59,    53,    54,   315,
+     316,     1,    15,     3,    15,   321,     7,     9,     8,    15,
+      10,    11,    12,    13,    32,    33,    16,    17,    18,    57,
+      15,    57,    22,    23,     7,    25,    26,    27,    28,    29,
+      48,    49,    50,     4,    34,    35,    36,    37,    38,    25,
+      15,    57,    42,    43,    44,    45,    46,    15,    57,    15,
+      50,    51,     3,    53,    54,    25,    56,     8,    58,    10,
+      11,    12,    13,    57,    57,    16,    17,    18,    15,    15,
+      57,    22,    15,    57,    25,    26,    27,    28,    29,   209,
+       9,   310,   233,    34,    35,    36,    37,    38,   273,    11,
+      -1,    42,    43,    44,    45,    46,    -1,    -1,    49,    50,
+      51,     3,    53,    54,    -1,    56,     8,    58,    10,    11,
+      12,    13,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
+      22,    23,    -1,    25,    26,    27,    28,    29,    -1,    -1,
+      -1,    -1,    34,    35,    36,    37,    38,    -1,    -1,    -1,
+      42,    43,    44,    45,    46,    -1,    -1,    -1,    50,    -1,
+       3,    53,    54,    -1,    56,     8,    58,    10,    11,    12,
       13,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,    22,
-      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    -1,
+      23,    -1,    25,    26,    27,    28,    29,    -1,    -1,    -1,
       -1,    34,    35,    36,    37,    38,    -1,    -1,    -1,    42,
-      43,    44,    45,    46,    -1,    -1,    49,    50,    51,     3,
+      43,    44,    45,    46,    -1,    -1,    -1,    -1,    -1,     3,
       53,    54,    -1,    56,     8,    58,    10,    11,    12,    13,
-      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    22,    23,
+      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    23,
       -1,    25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,
       34,    35,    36,    37,    38,    -1,    -1,    -1,    42,    43,
-      44,    45,    46,    -1,    -1,    -1,    50,    -1,     3,    53,
+      44,    45,    46,    -1,    -1,    -1,    -1,    -1,     3,    53,
       54,    -1,    56,     8,    58,    10,    11,    12,    13,    -1,
-      -1,    16,    17,    18,    -1,    -1,    -1,    22,    23,    -1,
+      -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
       25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    34,
       35,    36,    37,    38,    -1,    -1,    -1,    42,    43,    44,
-      45,    46,    -1,    -1,    -1,    -1,    -1,     3,    53,    54,
+      45,    46,    -1,    -1,    -1,    50,    -1,     3,    53,    54,
       -1,    56,     8,    58,    10,    11,    12,    13,    -1,    -1,
-      16,    17,    18,    -1,    -1,    -1,    -1,    23,    -1,    25,
+      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    25,
       26,    27,    28,    29,    -1,    -1,    -1,    -1,    34,    35,
       36,    37,    38,    -1,    -1,    -1,    42,    43,    44,    45,
       46,    -1,    -1,    -1,    -1,    -1,     3,    53,    54,    -1,
-      56,     8,    58,    10,    11,    12,    13,    -1,    -1,    16,
-      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    25,    26,
+      56,     8,    58,    10,    11,    12,    13,    -1,    -1,    -1,
+      -1,    18,    -1,    -1,    -1,    -1,    -1,    -1,    25,    26,
       27,    28,    29,    -1,    -1,    -1,    -1,    34,    35,    36,
       37,    38,    -1,    -1,    -1,    42,    43,    44,    45,    46,
-      -1,    -1,    -1,    50,    -1,     3,    53,    54,    -1,    56,
-       8,    58,    10,    11,    12,    13,    -1,    -1,    16,    17,
-      18,    -1,    -1,    -1,    -1,    -1,    -1,    25,    26,    27,
-      28,    29,    -1,    -1,    -1,    -1,    34,    35,    36,    37,
-      38,    -1,    -1,    -1,    42,    43,    44,    45,    46,    -1,
-      -1,    -1,    -1,    -1,     3,    53,    54,    -1,    56,     8,
-      58,    10,    11,    12,    13,    -1,    -1,    -1,    -1,    18,
-      -1,    -1,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
-      29,    -1,    -1,    -1,    -1,    34,    35,    36,    37,    38,
-      -1,    -1,    -1,    42,    43,    44,    45,    46,    -1,    -1,
-      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    -1,    58,
-      27,    28,    -1,    -1,    -1,    -1,    -1,    34,    35,    36,
-      37,    38,    -1,    -1,    -1,    42,    43,    44,    45,    46,
-      34,    35,    36,    37,    38,    -1,    53,    54,    42,    -1,
-      -1,    45,    46,    -1,    -1,    -1,    -1,    -1,    -1,    53,
-      54
+      -1,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
+      -1,    58,    34,    35,    36,    37,    38,    -1,    -1,    -1,
+      42,    -1,    -1,    45,    46,    -1,    -1,    -1,    -1,    -1,
+      -1,    53,    54
 };
 
 /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
@@ -1280,19 +1294,18 @@
       92,    92,    96,    87,    32,    33,    48,    49,    50,    21,
       92,    14,    21,    56,    87,    87,    92,    92,    14,    21,
       56,    87,    87,    59,    68,    74,    65,    92,    94,    94,
-      48,    49,    96,    96,     5,     6,     7,    81,    92,    92,
-      92,    92,    92,    82,    83,    84,    92,    14,    56,    87,
-      25,    62,    91,    87,    15,    57,    14,    56,    14,    56,
-      86,    92,    62,    86,    15,    15,    92,    65,    74,    87,
-      87,     7,    89,    89,    89,    89,    89,     9,    39,    40,
-      41,    83,    92,     9,    25,    58,    85,    87,    87,    15,
-      25,    91,    92,    57,    87,    87,    86,    86,    15,    89,
-      91,    57,    74,     7,     4,    48,    49,    50,    39,    40,
-      41,     9,    85,    52,    59,    15,    57,    92,    14,    56,
-      15,    57,    15,    57,    92,    87,    92,    92,    92,    59,
-      25,    87,    92,    14,    56,    87,    87,    14,    56,     5,
-      81,    87,    92,    87,    87,    15,    57,    86,    86,    87,
-      15,    57,    15,    57
+      96,    96,     5,     6,     7,    81,    92,    92,    92,    92,
+      92,    82,    83,    84,    92,    14,    56,    87,    25,    62,
+      91,    87,    15,    57,    14,    56,    14,    56,    86,    92,
+      62,    86,    15,    15,    92,    65,    74,    87,    87,     7,
+      89,    89,    89,    89,    89,     9,    39,    40,    41,    83,
+      92,     9,    25,    58,    85,    87,    87,    15,    25,    91,
+      92,    57,    87,    87,    86,    86,    15,    89,    91,    57,
+      74,     7,     4,    39,    40,    41,     9,    85,    52,    59,
+      15,    57,    92,    14,    56,    15,    57,    15,    57,    92,
+      87,    59,    25,    87,    92,    14,    56,    87,    87,    14,
+      56,     5,    81,    87,    92,    87,    87,    15,    57,    86,
+      86,    87,    15,    57,    15,    57
 };
 
 #define yyerrok		(yyerrstatus = 0)
@@ -1307,9 +1320,18 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  */
+   Once GCC version 2 has supplanted version 1, this can go.  However,
+   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
+   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
+   discussed.  */
 
 #define YYFAIL		goto yyerrlab
+#if defined YYFAIL
+  /* This is here to suppress warnings from the GCC cpp's
+     -Wunused-macros.  Normally we don't worry about that warning, but
+     some users do, and we want to make it easy for users to remove
+     YYFAIL uses, which will produce warnings from Bison 2.5.  */
+#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -1319,7 +1341,6 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
-      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -1361,19 +1382,10 @@
 #endif
 
 
-/* YY_LOCATION_PRINT -- Print the location on the stream.
-   This macro was not mandated originally: define only if we know
-   we won't break user code: when these are the locations we know.  */
+/* This macro is provided for backward compatibility. */
 
 #ifndef YY_LOCATION_PRINT
-# if YYLTYPE_IS_TRIVIAL
-#  define YY_LOCATION_PRINT(File, Loc)			\
-     fprintf (File, "%d.%d-%d.%d",			\
-	      (Loc).first_line, (Loc).first_column,	\
-	      (Loc).last_line,  (Loc).last_column)
-# else
-#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
-# endif
+# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
 #endif
 
 
@@ -1477,17 +1489,20 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
+yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
 #else
 static void
-yy_stack_print (bottom, top)
-    yytype_int16 *bottom;
-    yytype_int16 *top;
+yy_stack_print (yybottom, yytop)
+    yytype_int16 *yybottom;
+    yytype_int16 *yytop;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; bottom <= top; ++bottom)
-    YYFPRINTF (stderr, " %d", *bottom);
+  for (; yybottom <= yytop; yybottom++)
+    {
+      int yybot = *yybottom;
+      YYFPRINTF (stderr, " %d", yybot);
+    }
   YYFPRINTF (stderr, "\n");
 }
 
@@ -1521,11 +1536,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      fprintf (stderr, "   $%d = ", yyi + 1);
+      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      fprintf (stderr, "\n");
+      YYFPRINTF (stderr, "\n");
     }
 }
 
@@ -1562,7 +1577,6 @@
 # define YYMAXDEPTH 10000
 #endif
 
-
 
 #if YYERROR_VERBOSE
 
@@ -1665,115 +1679,142 @@
 }
 # endif
 
-/* Copy into YYRESULT an error message about the unexpected token
-   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
-   including the terminating null byte.  If YYRESULT is null, do not
-   copy anything; just return the number of bytes that would be
-   copied.  As a special case, return 0 if an ordinary "syntax error"
-   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
-   size calculation.  */
-static YYSIZE_T
-yysyntax_error (char *yyresult, int yystate, int yychar)
+/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
+   about the unexpected token YYTOKEN for the state stack whose top is
+   YYSSP.
+
+   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
+   not large enough to hold the message.  In that case, also set
+   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
+   required number of bytes is too large to store.  */
+static int
+yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
+                yytype_int16 *yyssp, int yytoken)
 {
-  int yyn = yypact[yystate];
+  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
+  YYSIZE_T yysize = yysize0;
+  YYSIZE_T yysize1;
+  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+  /* Internationalized format string. */
+  const char *yyformat = 0;
+  /* Arguments of yyformat. */
+  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+  /* Number of reported tokens (one for the "unexpected", one per
+     "expected"). */
+  int yycount = 0;
+
+  /* There are many possibilities here to consider:
+     - Assume YYFAIL is not used.  It's too flawed to consider.  See
+       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
+       for details.  YYERROR is fine as it does not invoke this
+       function.
+     - If this state is a consistent state with a default action, then
+       the only way this function was invoked is if the default action
+       is an error action.  In that case, don't check for expected
+       tokens because there are none.
+     - The only way there can be no lookahead present (in yychar) is if
+       this state is a consistent state with a default action.  Thus,
+       detecting the absence of a lookahead is sufficient to determine
+       that there is no unexpected or expected token to report.  In that
+       case, just report a simple "syntax error".
+     - Don't assume there isn't a lookahead just because this state is a
+       consistent state with a default action.  There might have been a
+       previous inconsistent state, consistent state with a non-default
+       action, or user semantic action that manipulated yychar.
+     - Of course, the expected token list depends on states to have
+       correct lookahead information, and it depends on the parser not
+       to perform extra reductions after fetching a lookahead from the
+       scanner and before detecting a syntax error.  Thus, state merging
+       (from LALR or IELR) and default reductions corrupt the expected
+       token list.  However, the list is correct for canonical LR with
+       one exception: it will still contain any token that will not be
+       accepted due to an error action in a later state.
+  */
+  if (yytoken != YYEMPTY)
+    {
+      int yyn = yypact[*yyssp];
+      yyarg[yycount++] = yytname[yytoken];
+      if (!yypact_value_is_default (yyn))
+        {
+          /* Start YYX at -YYN if negative to avoid negative indexes in
+             YYCHECK.  In other words, skip the first -YYN actions for
+             this state because they are default actions.  */
+          int yyxbegin = yyn < 0 ? -yyn : 0;
+          /* Stay within bounds of both yycheck and yytname.  */
+          int yychecklim = YYLAST - yyn + 1;
+          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+          int yyx;
+
+          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
+                && !yytable_value_is_error (yytable[yyx + yyn]))
+              {
+                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+                  {
+                    yycount = 1;
+                    yysize = yysize0;
+                    break;
+                  }
+                yyarg[yycount++] = yytname[yyx];
+                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+                if (! (yysize <= yysize1
+                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
+                  return 2;
+                yysize = yysize1;
+              }
+        }
+    }
 
-  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
-    return 0;
-  else
+  switch (yycount)
     {
-      int yytype = YYTRANSLATE (yychar);
-      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
-      YYSIZE_T yysize = yysize0;
-      YYSIZE_T yysize1;
-      int yysize_overflow = 0;
-      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-      int yyx;
-
-# if 0
-      /* This is so xgettext sees the translatable formats that are
-	 constructed on the fly.  */
-      YY_("syntax error, unexpected %s");
-      YY_("syntax error, unexpected %s, expecting %s");
-      YY_("syntax error, unexpected %s, expecting %s or %s");
-      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
-      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
-# endif
-      char *yyfmt;
-      char const *yyf;
-      static char const yyunexpected[] = "syntax error, unexpected %s";
-      static char const yyexpecting[] = ", expecting %s";
-      static char const yyor[] = " or %s";
-      char yyformat[sizeof yyunexpected
-		    + sizeof yyexpecting - 1
-		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
-		       * (sizeof yyor - 1))];
-      char const *yyprefix = yyexpecting;
-
-      /* Start YYX at -YYN if negative to avoid negative indexes in
-	 YYCHECK.  */
-      int yyxbegin = yyn < 0 ? -yyn : 0;
-
-      /* Stay within bounds of both yycheck and yytname.  */
-      int yychecklim = YYLAST - yyn + 1;
-      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-      int yycount = 1;
-
-      yyarg[0] = yytname[yytype];
-      yyfmt = yystpcpy (yyformat, yyunexpected);
-
-      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
-	  {
-	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-	      {
-		yycount = 1;
-		yysize = yysize0;
-		yyformat[sizeof yyunexpected - 1] = '\0';
-		break;
-	      }
-	    yyarg[yycount++] = yytname[yyx];
-	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-	    yysize_overflow |= (yysize1 < yysize);
-	    yysize = yysize1;
-	    yyfmt = yystpcpy (yyfmt, yyprefix);
-	    yyprefix = yyor;
-	  }
-
-      yyf = YY_(yyformat);
-      yysize1 = yysize + yystrlen (yyf);
-      yysize_overflow |= (yysize1 < yysize);
-      yysize = yysize1;
-
-      if (yysize_overflow)
-	return YYSIZE_MAXIMUM;
+# define YYCASE_(N, S)                      \
+      case N:                               \
+        yyformat = S;                       \
+      break
+      YYCASE_(0, YY_("syntax error"));
+      YYCASE_(1, YY_("syntax error, unexpected %s"));
+      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
+      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
+      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
+      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
+# undef YYCASE_
+    }
 
-      if (yyresult)
-	{
-	  /* Avoid sprintf, as that infringes on the user's name space.
-	     Don't have undefined behavior even if the translation
-	     produced a string with the wrong number of "%s"s.  */
-	  char *yyp = yyresult;
-	  int yyi = 0;
-	  while ((*yyp = *yyf) != '\0')
-	    {
-	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
-		{
-		  yyp += yytnamerr (yyp, yyarg[yyi++]);
-		  yyf += 2;
-		}
-	      else
-		{
-		  yyp++;
-		  yyf++;
-		}
-	    }
-	}
-      return yysize;
+  yysize1 = yysize + yystrlen (yyformat);
+  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
+    return 2;
+  yysize = yysize1;
+
+  if (*yymsg_alloc < yysize)
+    {
+      *yymsg_alloc = 2 * yysize;
+      if (! (yysize <= *yymsg_alloc
+             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
+        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
+      return 1;
     }
+
+  /* Avoid sprintf, as that infringes on the user's name space.
+     Don't have undefined behavior even if the translation
+     produced a string with the wrong number of "%s"s.  */
+  {
+    char *yyp = *yymsg;
+    int yyi = 0;
+    while ((*yyp = *yyformat) != '\0')
+      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
+        {
+          yyp += yytnamerr (yyp, yyarg[yyi++]);
+          yyformat += 2;
+        }
+      else
+        {
+          yyp++;
+          yyformat++;
+        }
+  }
+  return 0;
 }
 #endif /* YYERROR_VERBOSE */
-
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1805,10 +1846,9 @@
 	break;
     }
 }
-
 
-/* Prevent warnings from -Wmissing-prototypes.  */
 
+/* Prevent warnings from -Wmissing-prototypes.  */
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1824,18 +1864,16 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-
-/* The look-ahead symbol.  */
+/* The lookahead symbol.  */
 int yychar;
 
-/* The semantic value of the look-ahead symbol.  */
+/* The semantic value of the lookahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
-
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1862,14 +1900,37 @@
 #endif
 #endif
 {
-  
-  int yystate;
+    int yystate;
+    /* Number of tokens to shift before error messages enabled.  */
+    int yyerrstatus;
+
+    /* The stacks and their tools:
+       `yyss': related to states.
+       `yyvs': related to semantic values.
+
+       Refer to the stacks thru separate pointers, to allow yyoverflow
+       to reallocate them elsewhere.  */
+
+    /* The state stack.  */
+    yytype_int16 yyssa[YYINITDEPTH];
+    yytype_int16 *yyss;
+    yytype_int16 *yyssp;
+
+    /* The semantic value stack.  */
+    YYSTYPE yyvsa[YYINITDEPTH];
+    YYSTYPE *yyvs;
+    YYSTYPE *yyvsp;
+
+    YYSIZE_T yystacksize;
+
   int yyn;
   int yyresult;
-  /* Number of tokens to shift before error messages enabled.  */
-  int yyerrstatus;
-  /* Look-ahead token as an internal (translated) token number.  */
-  int yytoken = 0;
+  /* Lookahead token as an internal (translated) token number.  */
+  int yytoken;
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1877,51 +1938,28 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
-  /* Three stacks and their tools:
-     `yyss': related to states,
-     `yyvs': related to semantic values,
-     `yyls': related to locations.
-
-     Refer to the stacks thru separate pointers, to allow yyoverflow
-     to reallocate them elsewhere.  */
-
-  /* The state stack.  */
-  yytype_int16 yyssa[YYINITDEPTH];
-  yytype_int16 *yyss = yyssa;
-  yytype_int16 *yyssp;
-
-  /* The semantic value stack.  */
-  YYSTYPE yyvsa[YYINITDEPTH];
-  YYSTYPE *yyvs = yyvsa;
-  YYSTYPE *yyvsp;
-
-
-
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
-  YYSIZE_T yystacksize = YYINITDEPTH;
-
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
-
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
+  yytoken = 0;
+  yyss = yyssa;
+  yyvs = yyvsa;
+  yystacksize = YYINITDEPTH;
+
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY;		/* Cause a token to be read.  */
+  yychar = YYEMPTY; /* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
-
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1951,7 +1989,6 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
-
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1959,7 +1996,6 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
-
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1982,9 +2018,8 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss);
-	YYSTACK_RELOCATE (yyvs);
-
+	YYSTACK_RELOCATE (yyss_alloc, yyss);
+	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1995,7 +2030,6 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
-
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -2005,6 +2039,9 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
+  if (yystate == YYFINAL)
+    YYACCEPT;
+
   goto yybackup;
 
 /*-----------.
@@ -2013,16 +2050,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     look-ahead token if we need one and don't already have one.  */
+     lookahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to look-ahead token.  */
+  /* First try to decide what to do without reference to lookahead token.  */
   yyn = yypact[yystate];
-  if (yyn == YYPACT_NINF)
+  if (yypact_value_is_default (yyn))
     goto yydefault;
 
-  /* Not known => get a look-ahead token if don't already have one.  */
+  /* Not known => get a lookahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -2048,26 +2085,22 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yyn == 0 || yyn == YYTABLE_NINF)
-	goto yyerrlab;
+      if (yytable_value_is_error (yyn))
+        goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
-  if (yyn == YYFINAL)
-    YYACCEPT;
-
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the look-ahead token.  */
+  /* Shift the lookahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token unless it is eof.  */
-  if (yychar != YYEOF)
-    yychar = YYEMPTY;
+  /* Discard the shifted token.  */
+  yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -2107,7 +2140,9 @@
   switch (yyn)
     {
         case 2:
-#line 374 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 374 "./parse.y"
     {
 			  /* Case of regular command.  Discard the error
 			     safety net,and return the command just parsed. */
@@ -2121,7 +2156,9 @@
     break;
 
   case 3:
-#line 385 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 385 "./parse.y"
     {
 			  /* Case of regular command, but not a very
 			     interesting one.  Return a NULL command. */
@@ -2133,7 +2170,9 @@
     break;
 
   case 4:
-#line 394 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 394 "./parse.y"
     {
 			  /* Error during parsing.  Return NULL command. */
 			  global_command = (COMMAND *)NULL;
@@ -2151,7 +2190,9 @@
     break;
 
   case 5:
-#line 409 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 409 "./parse.y"
     {
 			  /* Case of EOF seen by itself.  Do ignoreeof or
 			     not. */
@@ -2162,17 +2203,23 @@
     break;
 
   case 6:
-#line 419 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 419 "./parse.y"
     { (yyval.word_list) = make_word_list ((yyvsp[(1) - (1)].word), (WORD_LIST *)NULL); }
     break;
 
   case 7:
-#line 421 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 421 "./parse.y"
     { (yyval.word_list) = make_word_list ((yyvsp[(2) - (2)].word), (yyvsp[(1) - (2)].word_list)); }
     break;
 
   case 8:
-#line 425 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 425 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2181,7 +2228,9 @@
     break;
 
   case 9:
-#line 431 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 431 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2190,7 +2239,9 @@
     break;
 
   case 10:
-#line 437 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 437 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2199,7 +2250,9 @@
     break;
 
   case 11:
-#line 443 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 443 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2208,7 +2261,9 @@
     break;
 
   case 12:
-#line 449 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 449 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2217,7 +2272,9 @@
     break;
 
   case 13:
-#line 455 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 455 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2226,7 +2283,9 @@
     break;
 
   case 14:
-#line 461 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 461 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2235,7 +2294,9 @@
     break;
 
   case 15:
-#line 467 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 467 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2244,7 +2305,9 @@
     break;
 
   case 16:
-#line 473 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 473 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2253,7 +2316,9 @@
     break;
 
   case 17:
-#line 479 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 479 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2262,7 +2327,9 @@
     break;
 
   case 18:
-#line 485 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 485 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2271,7 +2338,9 @@
     break;
 
   case 19:
-#line 491 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 491 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2280,7 +2349,9 @@
     break;
 
   case 20:
-#line 497 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 497 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2289,7 +2360,9 @@
     break;
 
   case 21:
-#line 503 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 503 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2298,7 +2371,9 @@
     break;
 
   case 22:
-#line 509 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 509 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2307,7 +2382,9 @@
     break;
 
   case 23:
-#line 515 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 515 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2317,7 +2394,9 @@
     break;
 
   case 24:
-#line 522 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 522 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2327,7 +2406,9 @@
     break;
 
   case 25:
-#line 529 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 529 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2337,7 +2418,9 @@
     break;
 
   case 26:
-#line 536 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 536 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2347,7 +2430,9 @@
     break;
 
   case 27:
-#line 543 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 543 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2357,7 +2442,9 @@
     break;
 
   case 28:
-#line 550 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 550 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2367,7 +2454,9 @@
     break;
 
   case 29:
-#line 557 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 557 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2376,7 +2465,9 @@
     break;
 
   case 30:
-#line 563 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 563 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2385,7 +2476,9 @@
     break;
 
   case 31:
-#line 569 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 569 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2394,7 +2487,9 @@
     break;
 
   case 32:
-#line 575 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 575 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.dest = (yyvsp[(2) - (2)].number);
@@ -2403,7 +2498,9 @@
     break;
 
   case 33:
-#line 581 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 581 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.dest = (yyvsp[(3) - (3)].number);
@@ -2412,7 +2509,9 @@
     break;
 
   case 34:
-#line 587 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 587 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.dest = (yyvsp[(3) - (3)].number);
@@ -2421,7 +2520,9 @@
     break;
 
   case 35:
-#line 593 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 593 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.dest = (yyvsp[(2) - (2)].number);
@@ -2430,7 +2531,9 @@
     break;
 
   case 36:
-#line 599 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 599 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.dest = (yyvsp[(3) - (3)].number);
@@ -2439,7 +2542,9 @@
     break;
 
   case 37:
-#line 605 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 605 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.dest = (yyvsp[(3) - (3)].number);
@@ -2448,7 +2553,9 @@
     break;
 
   case 38:
-#line 611 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 611 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2457,7 +2564,9 @@
     break;
 
   case 39:
-#line 617 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 617 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2466,7 +2575,9 @@
     break;
 
   case 40:
-#line 623 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 623 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2475,7 +2586,9 @@
     break;
 
   case 41:
-#line 629 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 629 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2484,7 +2597,9 @@
     break;
 
   case 42:
-#line 635 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 635 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2493,7 +2608,9 @@
     break;
 
   case 43:
-#line 641 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 641 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.filename = (yyvsp[(3) - (3)].word);
@@ -2502,7 +2619,9 @@
     break;
 
   case 44:
-#line 647 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 647 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.dest = 0;
@@ -2511,7 +2630,9 @@
     break;
 
   case 45:
-#line 653 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 653 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.dest = 0;
@@ -2520,7 +2641,9 @@
     break;
 
   case 46:
-#line 659 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 659 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.dest = 0;
@@ -2529,7 +2652,9 @@
     break;
 
   case 47:
-#line 665 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 665 "./parse.y"
     {
 			  source.dest = 0;
 			  redir.dest = 0;
@@ -2538,7 +2663,9 @@
     break;
 
   case 48:
-#line 671 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 671 "./parse.y"
     {
 			  source.dest = (yyvsp[(1) - (3)].number);
 			  redir.dest = 0;
@@ -2547,7 +2674,9 @@
     break;
 
   case 49:
-#line 677 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 677 "./parse.y"
     {
 			  source.filename = (yyvsp[(1) - (3)].word);
 			  redir.dest = 0;
@@ -2556,7 +2685,9 @@
     break;
 
   case 50:
-#line 683 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 683 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2565,7 +2696,9 @@
     break;
 
   case 51:
-#line 689 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 689 "./parse.y"
     {
 			  source.dest = 1;
 			  redir.filename = (yyvsp[(2) - (2)].word);
@@ -2574,29 +2707,39 @@
     break;
 
   case 52:
-#line 697 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 697 "./parse.y"
     { (yyval.element).word = (yyvsp[(1) - (1)].word); (yyval.element).redirect = 0; }
     break;
 
   case 53:
-#line 699 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 699 "./parse.y"
     { (yyval.element).word = (yyvsp[(1) - (1)].word); (yyval.element).redirect = 0; }
     break;
 
   case 54:
-#line 701 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 701 "./parse.y"
     { (yyval.element).redirect = (yyvsp[(1) - (1)].redirect); (yyval.element).word = 0; }
     break;
 
   case 55:
-#line 705 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 705 "./parse.y"
     {
 			  (yyval.redirect) = (yyvsp[(1) - (1)].redirect);
 			}
     break;
 
   case 56:
-#line 709 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 709 "./parse.y"
     {
 			  register REDIRECT *t;
 
@@ -2608,27 +2751,37 @@
     break;
 
   case 57:
-#line 720 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 720 "./parse.y"
     { (yyval.command) = make_simple_command ((yyvsp[(1) - (1)].element), (COMMAND *)NULL); }
     break;
 
   case 58:
-#line 722 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 722 "./parse.y"
     { (yyval.command) = make_simple_command ((yyvsp[(2) - (2)].element), (yyvsp[(1) - (2)].command)); }
     break;
 
   case 59:
-#line 726 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 726 "./parse.y"
     { (yyval.command) = clean_simple_command ((yyvsp[(1) - (1)].command)); }
     break;
 
   case 60:
-#line 728 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 728 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 61:
-#line 730 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 730 "./parse.y"
     {
 			  COMMAND *tc;
 
@@ -2647,72 +2800,100 @@
     break;
 
   case 62:
-#line 746 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 746 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 63:
-#line 748 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 748 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 64:
-#line 752 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 752 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 65:
-#line 754 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 754 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 66:
-#line 756 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 756 "./parse.y"
     { (yyval.command) = make_while_command ((yyvsp[(2) - (5)].command), (yyvsp[(4) - (5)].command)); }
     break;
 
   case 67:
-#line 758 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 758 "./parse.y"
     { (yyval.command) = make_until_command ((yyvsp[(2) - (5)].command), (yyvsp[(4) - (5)].command)); }
     break;
 
   case 68:
-#line 760 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 760 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 69:
-#line 762 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 762 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 70:
-#line 764 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 764 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 71:
-#line 766 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 766 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 72:
-#line 768 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 768 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 73:
-#line 770 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 770 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 74:
-#line 772 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 772 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 75:
-#line 776 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 776 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (6)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(5) - (6)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2720,7 +2901,9 @@
     break;
 
   case 76:
-#line 781 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 781 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (6)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(5) - (6)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2728,7 +2911,9 @@
     break;
 
   case 77:
-#line 786 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 786 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (7)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(6) - (7)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2736,7 +2921,9 @@
     break;
 
   case 78:
-#line 791 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 791 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (7)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(6) - (7)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2744,7 +2931,9 @@
     break;
 
   case 79:
-#line 796 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 796 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (10)].word), REVERSE_LIST ((yyvsp[(5) - (10)].word_list), WORD_LIST *), (yyvsp[(9) - (10)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2752,7 +2941,9 @@
     break;
 
   case 80:
-#line 801 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 801 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (10)].word), REVERSE_LIST ((yyvsp[(5) - (10)].word_list), WORD_LIST *), (yyvsp[(9) - (10)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2760,7 +2951,9 @@
     break;
 
   case 81:
-#line 806 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 806 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (9)].word), (WORD_LIST *)NULL, (yyvsp[(8) - (9)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2768,7 +2961,9 @@
     break;
 
   case 82:
-#line 811 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 811 "./parse.y"
     {
 			  (yyval.command) = make_for_command ((yyvsp[(2) - (9)].word), (WORD_LIST *)NULL, (yyvsp[(8) - (9)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2776,7 +2971,9 @@
     break;
 
   case 83:
-#line 818 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 818 "./parse.y"
     {
 				  (yyval.command) = make_arith_for_command ((yyvsp[(2) - (7)].word_list), (yyvsp[(6) - (7)].command), arith_for_lineno);
 				  if (word_top > 0) word_top--;
@@ -2784,7 +2981,9 @@
     break;
 
   case 84:
-#line 823 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 823 "./parse.y"
     {
 				  (yyval.command) = make_arith_for_command ((yyvsp[(2) - (7)].word_list), (yyvsp[(6) - (7)].command), arith_for_lineno);
 				  if (word_top > 0) word_top--;
@@ -2792,7 +2991,9 @@
     break;
 
   case 85:
-#line 828 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 828 "./parse.y"
     {
 				  (yyval.command) = make_arith_for_command ((yyvsp[(2) - (5)].word_list), (yyvsp[(4) - (5)].command), arith_for_lineno);
 				  if (word_top > 0) word_top--;
@@ -2800,7 +3001,9 @@
     break;
 
   case 86:
-#line 833 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 833 "./parse.y"
     {
 				  (yyval.command) = make_arith_for_command ((yyvsp[(2) - (5)].word_list), (yyvsp[(4) - (5)].command), arith_for_lineno);
 				  if (word_top > 0) word_top--;
@@ -2808,7 +3011,9 @@
     break;
 
   case 87:
-#line 840 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 840 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (6)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(5) - (6)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2816,7 +3021,9 @@
     break;
 
   case 88:
-#line 845 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 845 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (6)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(5) - (6)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2824,7 +3031,9 @@
     break;
 
   case 89:
-#line 850 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 850 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (7)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(6) - (7)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2832,7 +3041,9 @@
     break;
 
   case 90:
-#line 855 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 855 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (7)].word), add_string_to_list ("\"$@\"", (WORD_LIST *)NULL), (yyvsp[(6) - (7)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2840,7 +3051,9 @@
     break;
 
   case 91:
-#line 860 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 860 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (10)].word), REVERSE_LIST ((yyvsp[(5) - (10)].word_list), WORD_LIST *), (yyvsp[(9) - (10)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2848,7 +3061,9 @@
     break;
 
   case 92:
-#line 865 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 865 "./parse.y"
     {
 			  (yyval.command) = make_select_command ((yyvsp[(2) - (10)].word), REVERSE_LIST ((yyvsp[(5) - (10)].word_list), WORD_LIST *), (yyvsp[(9) - (10)].command), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2856,7 +3071,9 @@
     break;
 
   case 93:
-#line 872 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 872 "./parse.y"
     {
 			  (yyval.command) = make_case_command ((yyvsp[(2) - (6)].word), (PATTERN_LIST *)NULL, word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2864,7 +3081,9 @@
     break;
 
   case 94:
-#line 877 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 877 "./parse.y"
     {
 			  (yyval.command) = make_case_command ((yyvsp[(2) - (7)].word), (yyvsp[(5) - (7)].pattern), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2872,7 +3091,9 @@
     break;
 
   case 95:
-#line 882 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 882 "./parse.y"
     {
 			  (yyval.command) = make_case_command ((yyvsp[(2) - (6)].word), (yyvsp[(5) - (6)].pattern), word_lineno[word_top]);
 			  if (word_top > 0) word_top--;
@@ -2880,27 +3101,37 @@
     break;
 
   case 96:
-#line 889 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 889 "./parse.y"
     { (yyval.command) = make_function_def ((yyvsp[(1) - (5)].word), (yyvsp[(5) - (5)].command), function_dstart, function_bstart); }
     break;
 
   case 97:
-#line 892 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 892 "./parse.y"
     { (yyval.command) = make_function_def ((yyvsp[(2) - (6)].word), (yyvsp[(6) - (6)].command), function_dstart, function_bstart); }
     break;
 
   case 98:
-#line 895 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 895 "./parse.y"
     { (yyval.command) = make_function_def ((yyvsp[(2) - (4)].word), (yyvsp[(4) - (4)].command), function_dstart, function_bstart); }
     break;
 
   case 99:
-#line 899 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 899 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 100:
-#line 901 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 901 "./parse.y"
     {
 			  COMMAND *tc;
 
@@ -2932,7 +3163,9 @@
     break;
 
   case 101:
-#line 932 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 932 "./parse.y"
     {
 			  (yyval.command) = make_subshell_command ((yyvsp[(2) - (3)].command));
 			  (yyval.command)->flags |= CMD_WANT_SUBSHELL;
@@ -2940,7 +3173,9 @@
     break;
 
   case 102:
-#line 939 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 939 "./parse.y"
     {
 			  (yyval.command) = make_coproc_command ("COPROC", (yyvsp[(2) - (2)].command));
 			  (yyval.command)->flags |= CMD_WANT_SUBSHELL|CMD_COPROC_SUBSHELL;
@@ -2948,7 +3183,9 @@
     break;
 
   case 103:
-#line 944 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 944 "./parse.y"
     {
 			  COMMAND *tc;
 
@@ -2968,7 +3205,9 @@
     break;
 
   case 104:
-#line 961 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 961 "./parse.y"
     {
 			  (yyval.command) = make_coproc_command ((yyvsp[(2) - (3)].word)->word, (yyvsp[(3) - (3)].command));
 			  (yyval.command)->flags |= CMD_WANT_SUBSHELL|CMD_COPROC_SUBSHELL;
@@ -2976,7 +3215,9 @@
     break;
 
   case 105:
-#line 966 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 966 "./parse.y"
     {
 			  COMMAND *tc;
 
@@ -2996,7 +3237,9 @@
     break;
 
   case 106:
-#line 983 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 983 "./parse.y"
     {
 			  (yyval.command) = make_coproc_command ("COPROC", clean_simple_command ((yyvsp[(2) - (2)].command)));
 			  (yyval.command)->flags |= CMD_WANT_SUBSHELL|CMD_COPROC_SUBSHELL;
@@ -3004,117 +3247,163 @@
     break;
 
   case 107:
-#line 990 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 990 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (5)].command), (yyvsp[(4) - (5)].command), (COMMAND *)NULL); }
     break;
 
   case 108:
-#line 992 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 992 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (7)].command), (yyvsp[(4) - (7)].command), (yyvsp[(6) - (7)].command)); }
     break;
 
   case 109:
-#line 994 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 994 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (6)].command), (yyvsp[(4) - (6)].command), (yyvsp[(5) - (6)].command)); }
     break;
 
   case 110:
-#line 999 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 999 "./parse.y"
     { (yyval.command) = make_group_command ((yyvsp[(2) - (3)].command)); }
     break;
 
   case 111:
-#line 1003 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1003 "./parse.y"
     { (yyval.command) = make_arith_command ((yyvsp[(1) - (1)].word_list)); }
     break;
 
   case 112:
-#line 1007 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1007 "./parse.y"
     { (yyval.command) = (yyvsp[(2) - (3)].command); }
     break;
 
   case 113:
-#line 1011 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1011 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (4)].command), (yyvsp[(4) - (4)].command), (COMMAND *)NULL); }
     break;
 
   case 114:
-#line 1013 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1013 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (6)].command), (yyvsp[(4) - (6)].command), (yyvsp[(6) - (6)].command)); }
     break;
 
   case 115:
-#line 1015 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1015 "./parse.y"
     { (yyval.command) = make_if_command ((yyvsp[(2) - (5)].command), (yyvsp[(4) - (5)].command), (yyvsp[(5) - (5)].command)); }
     break;
 
   case 117:
-#line 1020 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1020 "./parse.y"
     { (yyvsp[(2) - (2)].pattern)->next = (yyvsp[(1) - (2)].pattern); (yyval.pattern) = (yyvsp[(2) - (2)].pattern); }
     break;
 
   case 118:
-#line 1024 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1024 "./parse.y"
     { (yyval.pattern) = make_pattern_list ((yyvsp[(2) - (4)].word_list), (yyvsp[(4) - (4)].command)); }
     break;
 
   case 119:
-#line 1026 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1026 "./parse.y"
     { (yyval.pattern) = make_pattern_list ((yyvsp[(2) - (4)].word_list), (COMMAND *)NULL); }
     break;
 
   case 120:
-#line 1028 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1028 "./parse.y"
     { (yyval.pattern) = make_pattern_list ((yyvsp[(3) - (5)].word_list), (yyvsp[(5) - (5)].command)); }
     break;
 
   case 121:
-#line 1030 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1030 "./parse.y"
     { (yyval.pattern) = make_pattern_list ((yyvsp[(3) - (5)].word_list), (COMMAND *)NULL); }
     break;
 
   case 122:
-#line 1034 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1034 "./parse.y"
     { (yyval.pattern) = (yyvsp[(1) - (2)].pattern); }
     break;
 
   case 123:
-#line 1036 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1036 "./parse.y"
     { (yyvsp[(2) - (3)].pattern)->next = (yyvsp[(1) - (3)].pattern); (yyval.pattern) = (yyvsp[(2) - (3)].pattern); }
     break;
 
   case 124:
-#line 1038 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1038 "./parse.y"
     { (yyvsp[(1) - (2)].pattern)->flags |= CASEPAT_FALLTHROUGH; (yyval.pattern) = (yyvsp[(1) - (2)].pattern); }
     break;
 
   case 125:
-#line 1040 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1040 "./parse.y"
     { (yyvsp[(2) - (3)].pattern)->flags |= CASEPAT_FALLTHROUGH; (yyvsp[(2) - (3)].pattern)->next = (yyvsp[(1) - (3)].pattern); (yyval.pattern) = (yyvsp[(2) - (3)].pattern); }
     break;
 
   case 126:
-#line 1042 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1042 "./parse.y"
     { (yyvsp[(1) - (2)].pattern)->flags |= CASEPAT_TESTNEXT; (yyval.pattern) = (yyvsp[(1) - (2)].pattern); }
     break;
 
   case 127:
-#line 1044 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1044 "./parse.y"
     { (yyvsp[(2) - (3)].pattern)->flags |= CASEPAT_TESTNEXT; (yyvsp[(2) - (3)].pattern)->next = (yyvsp[(1) - (3)].pattern); (yyval.pattern) = (yyvsp[(2) - (3)].pattern); }
     break;
 
   case 128:
-#line 1048 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1048 "./parse.y"
     { (yyval.word_list) = make_word_list ((yyvsp[(1) - (1)].word), (WORD_LIST *)NULL); }
     break;
 
   case 129:
-#line 1050 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1050 "./parse.y"
     { (yyval.word_list) = make_word_list ((yyvsp[(3) - (3)].word), (yyvsp[(1) - (3)].word_list)); }
     break;
 
   case 130:
-#line 1059 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1059 "./parse.y"
     {
 			  (yyval.command) = (yyvsp[(2) - (2)].command);
 			  if (need_here_doc)
@@ -3123,14 +3412,18 @@
     break;
 
   case 132:
-#line 1068 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1068 "./parse.y"
     {
 			  (yyval.command) = (yyvsp[(2) - (2)].command);
 			}
     break;
 
   case 134:
-#line 1075 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1075 "./parse.y"
     {
 			  if ((yyvsp[(1) - (3)].command)->type == cm_connection)
 			    (yyval.command) = connect_async_list ((yyvsp[(1) - (3)].command), (COMMAND *)NULL, '&');
@@ -3140,17 +3433,23 @@
     break;
 
   case 136:
-#line 1086 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1086 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), AND_AND); }
     break;
 
   case 137:
-#line 1088 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1088 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), OR_OR); }
     break;
 
   case 138:
-#line 1090 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1090 "./parse.y"
     {
 			  if ((yyvsp[(1) - (4)].command)->type == cm_connection)
 			    (yyval.command) = connect_async_list ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), '&');
@@ -3160,37 +3459,51 @@
     break;
 
   case 139:
-#line 1097 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1097 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), ';'); }
     break;
 
   case 140:
-#line 1099 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1099 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), ';'); }
     break;
 
   case 141:
-#line 1101 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1101 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 144:
-#line 1109 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1109 "./parse.y"
     { (yyval.number) = '\n'; }
     break;
 
   case 145:
-#line 1111 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1111 "./parse.y"
     { (yyval.number) = ';'; }
     break;
 
   case 146:
-#line 1113 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1113 "./parse.y"
     { (yyval.number) = yacc_EOF; }
     break;
 
   case 149:
-#line 1127 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1127 "./parse.y"
     {
 			  (yyval.command) = (yyvsp[(1) - (1)].command);
 			  if (need_here_doc)
@@ -3206,7 +3519,9 @@
     break;
 
   case 150:
-#line 1140 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1140 "./parse.y"
     {
 			  if ((yyvsp[(1) - (2)].command)->type == cm_connection)
 			    (yyval.command) = connect_async_list ((yyvsp[(1) - (2)].command), (COMMAND *)NULL, '&');
@@ -3225,7 +3540,9 @@
     break;
 
   case 151:
-#line 1156 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1156 "./parse.y"
     {
 			  (yyval.command) = (yyvsp[(1) - (2)].command);
 			  if (need_here_doc)
@@ -3241,17 +3558,23 @@
     break;
 
   case 152:
-#line 1171 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1171 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), AND_AND); }
     break;
 
   case 153:
-#line 1173 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1173 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), OR_OR); }
     break;
 
   case 154:
-#line 1175 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1175 "./parse.y"
     {
 			  if ((yyvsp[(1) - (3)].command)->type == cm_connection)
 			    (yyval.command) = connect_async_list ((yyvsp[(1) - (3)].command), (yyvsp[(3) - (3)].command), '&');
@@ -3261,22 +3584,30 @@
     break;
 
   case 155:
-#line 1182 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1182 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (3)].command), (yyvsp[(3) - (3)].command), ';'); }
     break;
 
   case 156:
-#line 1185 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1185 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 157:
-#line 1189 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1189 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 158:
-#line 1191 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1191 "./parse.y"
     {
 			  if ((yyvsp[(2) - (2)].command))
 			    (yyvsp[(2) - (2)].command)->flags |= CMD_INVERT_RETURN;
@@ -3285,7 +3616,9 @@
     break;
 
   case 159:
-#line 1197 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1197 "./parse.y"
     {
 			  if ((yyvsp[(2) - (2)].command))
 			    (yyvsp[(2) - (2)].command)->flags |= (yyvsp[(1) - (2)].number);
@@ -3294,7 +3627,9 @@
     break;
 
   case 160:
-#line 1203 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1203 "./parse.y"
     {
 			  if ((yyvsp[(3) - (3)].command))
 			    (yyvsp[(3) - (3)].command)->flags |= (yyvsp[(1) - (3)].number)|CMD_INVERT_RETURN;
@@ -3303,7 +3638,9 @@
     break;
 
   case 161:
-#line 1209 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1209 "./parse.y"
     {
 			  if ((yyvsp[(3) - (3)].command))
 			    (yyvsp[(3) - (3)].command)->flags |= (yyvsp[(2) - (3)].number)|CMD_INVERT_RETURN;
@@ -3312,7 +3649,9 @@
     break;
 
   case 162:
-#line 1215 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1215 "./parse.y"
     {
 			  ELEMENT x;
 
@@ -3332,12 +3671,16 @@
     break;
 
   case 163:
-#line 1235 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1235 "./parse.y"
     { (yyval.command) = command_connect ((yyvsp[(1) - (4)].command), (yyvsp[(4) - (4)].command), '|'); }
     break;
 
   case 164:
-#line 1237 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1237 "./parse.y"
     {
 			  /* Make cmd1 |& cmd2 equivalent to cmd1 2>&1 | cmd2 */
 			  COMMAND *tc;
@@ -3363,25 +3706,43 @@
     break;
 
   case 165:
-#line 1260 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1260 "./parse.y"
     { (yyval.command) = (yyvsp[(1) - (1)].command); }
     break;
 
   case 166:
-#line 1264 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1264 "./parse.y"
     { (yyval.number) = CMD_TIME_PIPELINE; }
     break;
 
   case 167:
-#line 1266 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 1806 of yacc.c  */
+#line 1266 "./parse.y"
     { (yyval.number) = CMD_TIME_PIPELINE|CMD_TIME_POSIX; }
     break;
 
 
-/* Line 1267 of yacc.c.  */
-#line 3383 "y.tab.c"
+
+/* Line 1806 of yacc.c  */
+#line 3733 "y.tab.c"
       default: break;
     }
+  /* User semantic actions sometimes alter yychar, and that requires
+     that yytoken be updated with the new translation.  We take the
+     approach of translating immediately before every use of yytoken.
+     One alternative is translating here after every semantic action,
+     but that translation would be missed if the semantic action invokes
+     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
+     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
+     incorrect destructor might then be invoked immediately.  In the
+     case of YYERROR or YYBACKUP, subsequent parser actions might lead
+     to an incorrect destructor call or verbose syntax error message
+     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -3390,7 +3751,6 @@
 
   *++yyvsp = yyval;
 
-
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -3410,6 +3770,10 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
+  /* Make sure we have latest lookahead translation.  See comments at
+     user semantic actions for why this is necessary.  */
+  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
+
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -3417,37 +3781,36 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
+# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
+                                        yyssp, yytoken)
       {
-	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
-	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
-	  {
-	    YYSIZE_T yyalloc = 2 * yysize;
-	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
-	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
-	    if (yymsg != yymsgbuf)
-	      YYSTACK_FREE (yymsg);
-	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
-	    if (yymsg)
-	      yymsg_alloc = yyalloc;
-	    else
-	      {
-		yymsg = yymsgbuf;
-		yymsg_alloc = sizeof yymsgbuf;
-	      }
-	  }
-
-	if (0 < yysize && yysize <= yymsg_alloc)
-	  {
-	    (void) yysyntax_error (yymsg, yystate, yychar);
-	    yyerror (yymsg);
-	  }
-	else
-	  {
-	    yyerror (YY_("syntax error"));
-	    if (yysize != 0)
-	      goto yyexhaustedlab;
-	  }
+        char const *yymsgp = YY_("syntax error");
+        int yysyntax_error_status;
+        yysyntax_error_status = YYSYNTAX_ERROR;
+        if (yysyntax_error_status == 0)
+          yymsgp = yymsg;
+        else if (yysyntax_error_status == 1)
+          {
+            if (yymsg != yymsgbuf)
+              YYSTACK_FREE (yymsg);
+            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
+            if (!yymsg)
+              {
+                yymsg = yymsgbuf;
+                yymsg_alloc = sizeof yymsgbuf;
+                yysyntax_error_status = 2;
+              }
+            else
+              {
+                yysyntax_error_status = YYSYNTAX_ERROR;
+                yymsgp = yymsg;
+              }
+          }
+        yyerror (yymsgp);
+        if (yysyntax_error_status == 2)
+          goto yyexhaustedlab;
       }
+# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -3455,7 +3818,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse look-ahead token after an
+      /* If just tried and failed to reuse lookahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -3472,7 +3835,7 @@
 	}
     }
 
-  /* Else will try to reuse look-ahead token after shifting the error
+  /* Else will try to reuse lookahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -3506,7 +3869,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (yyn != YYPACT_NINF)
+      if (!yypact_value_is_default (yyn))
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -3529,9 +3892,6 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
-  if (yyn == YYFINAL)
-    YYACCEPT;
-
   *++yyvsp = yylval;
 
 
@@ -3556,7 +3916,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#ifndef yyoverflow
+#if !defined(yyoverflow) || YYERROR_VERBOSE
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -3567,9 +3927,14 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEOF && yychar != YYEMPTY)
-     yydestruct ("Cleanup: discarding lookahead",
-		 yytoken, &yylval);
+  if (yychar != YYEMPTY)
+    {
+      /* Make sure we have latest lookahead translation.  See comments at
+         user semantic actions for why this is necessary.  */
+      yytoken = YYTRANSLATE (yychar);
+      yydestruct ("Cleanup: discarding lookahead",
+                  yytoken, &yylval);
+    }
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -3593,7 +3958,9 @@
 }
 
 
-#line 1268 "/Users/chet/src/bash/src/parse.y"
+
+/* Line 2067 of yacc.c  */
+#line 1268 "./parse.y"
 
 
 /* Initial size to allocate for tokens, and the
diff -ru -x config.guess -x config.sub original/bash-4.1/y.tab.h archives/bash-4.1/y.tab.h
--- original/bash-4.1/y.tab.h	2009-12-31 02:52:02.000000000 +0900
+++ archives/bash-4.1/y.tab.h	2013-08-11 22:27:22.704779031 +0900
@@ -1,24 +1,21 @@
-/* A Bison parser, made by GNU Bison 2.3.  */
+/* A Bison parser, made by GNU Bison 2.5.  */
 
-/* Skeleton interface for Bison's Yacc-like parsers in C
-
-   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
-   Free Software Foundation, Inc.
-
-   This program is free software; you can redistribute it and/or modify
+/* Bison interface for Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
+   
+   This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 2, or (at your option)
-   any later version.
-
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-
+   
    You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor,
-   Boston, MA 02110-1301, USA.  */
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -29,10 +26,11 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-
+   
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
+
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -140,8 +138,11 @@
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-#line 320 "/Users/chet/src/bash/src/parse.y"
 {
+
+/* Line 2068 of yacc.c  */
+#line 320 "./parse.y"
+
   WORD_DESC *word;		/* the word that we read. */
   int number;			/* the number that we read. */
   WORD_LIST *word_list;
@@ -149,14 +150,17 @@
   REDIRECT *redirect;
   ELEMENT element;
   PATTERN_LIST *pattern;
-}
-/* Line 1489 of yacc.c.  */
-#line 155 "y.tab.h"
-	YYSTYPE;
+
+
+
+/* Line 2068 of yacc.c  */
+#line 158 "y.tab.h"
+} YYSTYPE;
+# define YYSTYPE_IS_TRIVIAL 1
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
-# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE yylval;
 
+
